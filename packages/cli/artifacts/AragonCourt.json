{
  "contractName": "AragonCourt",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentTermId",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoting",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTermDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_ids",
          "type": "bytes32[]"
        },
        {
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "setModules",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "areWithdrawalsAllowedFor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSubscriptions",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFundsGovernor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "ensureCurrentTerm",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getModulesGovernor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNeededTermTransitions",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "bytes32"
        },
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_termId",
          "type": "uint64"
        }
      ],
      "name": "getTermRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_termId",
          "type": "uint64"
        }
      ],
      "name": "getDraftConfig",
      "outputs": [
        {
          "name": "feeToken",
          "type": "address"
        },
        {
          "name": "draftFee",
          "type": "uint256"
        },
        {
          "name": "penaltyPct",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getConfigChangeTermId",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "ensureCurrentTermRandomness",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAutomaticWithdrawals",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "getModule",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "ejectModulesGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newFundsGovernor",
          "type": "address"
        }
      ],
      "name": "changeFundsGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getJurorsRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_termId",
          "type": "uint64"
        }
      ],
      "name": "getMinActiveBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getConfigGovernor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxRequestedTransitions",
          "type": "uint64"
        }
      ],
      "name": "heartbeat",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fromTermId",
          "type": "uint64"
        },
        {
          "name": "_feeToken",
          "type": "address"
        },
        {
          "name": "_fees",
          "type": "uint256[3]"
        },
        {
          "name": "_roundStateDurations",
          "type": "uint64[5]"
        },
        {
          "name": "_pcts",
          "type": "uint16[2]"
        },
        {
          "name": "_roundParams",
          "type": "uint64[4]"
        },
        {
          "name": "_appealCollateralParams",
          "type": "uint256[2]"
        },
        {
          "name": "_minActiveBalance",
          "type": "uint256"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "ejectFundsGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newModulesGovernor",
          "type": "address"
        }
      ],
      "name": "changeModulesGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newConfigGovernor",
          "type": "address"
        }
      ],
      "name": "changeConfigGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_termId",
          "type": "uint64"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "name": "feeToken",
          "type": "address"
        },
        {
          "name": "fees",
          "type": "uint256[3]"
        },
        {
          "name": "roundStateDurations",
          "type": "uint64[5]"
        },
        {
          "name": "pcts",
          "type": "uint16[2]"
        },
        {
          "name": "roundParams",
          "type": "uint64[4]"
        },
        {
          "name": "appealCollateralParams",
          "type": "uint256[2]"
        },
        {
          "name": "minActiveBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newFirstTermStartTime",
          "type": "uint64"
        }
      ],
      "name": "delayStartTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_termId",
          "type": "uint64"
        }
      ],
      "name": "getTerm",
      "outputs": [
        {
          "name": "startTime",
          "type": "uint64"
        },
        {
          "name": "randomnessBN",
          "type": "uint64"
        },
        {
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastEnsuredTermId",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_termParams",
          "type": "uint64[2]"
        },
        {
          "name": "_governors",
          "type": "address[3]"
        },
        {
          "name": "_feeToken",
          "type": "address"
        },
        {
          "name": "_fees",
          "type": "uint256[3]"
        },
        {
          "name": "_roundStateDurations",
          "type": "uint64[5]"
        },
        {
          "name": "_pcts",
          "type": "uint16[2]"
        },
        {
          "name": "_roundParams",
          "type": "uint64[4]"
        },
        {
          "name": "_appealCollateralParams",
          "type": "uint256[2]"
        },
        {
          "name": "_minActiveBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "ModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentGovernor",
          "type": "address"
        }
      ],
      "name": "FundsGovernorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentGovernor",
          "type": "address"
        }
      ],
      "name": "ConfigGovernorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentGovernor",
          "type": "address"
        }
      ],
      "name": "ModulesGovernorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fromTermId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "courtConfigId",
          "type": "uint64"
        }
      ],
      "name": "NewConfig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "AutomaticWithdrawalsAllowedChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousTermId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "currentTermId",
          "type": "uint64"
        }
      ],
      "name": "Heartbeat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousStartTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "currentStartTime",
          "type": "uint64"
        }
      ],
      "name": "StartTimeDelayed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_possibleRulings",
          "type": "uint256"
        },
        {
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "closeEvidencePeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "executeRuling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputeFees",
      "outputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "feeToken",
          "type": "address"
        },
        {
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_subscriber",
          "type": "address"
        }
      ],
      "name": "getSubscriptionFees",
      "outputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "feeToken",
          "type": "address"
        },
        {
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentTermId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoting\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTermDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ids\",\"type\":\"bytes32[]\"},{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"setModules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"areWithdrawalsAllowedFor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSubscriptions\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFundsGovernor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ensureCurrentTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getModulesGovernor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNeededTermTransitions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_termId\",\"type\":\"uint64\"}],\"name\":\"getTermRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_termId\",\"type\":\"uint64\"}],\"name\":\"getDraftConfig\",\"outputs\":[{\"name\":\"feeToken\",\"type\":\"address\"},{\"name\":\"draftFee\",\"type\":\"uint256\"},{\"name\":\"penaltyPct\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getConfigChangeTermId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputeFees\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"feeToken\",\"type\":\"address\"},{\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ensureCurrentTermRandomness\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"closeEvidencePeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAutomaticWithdrawals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getModule\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"executeRuling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ejectModulesGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundsGovernor\",\"type\":\"address\"}],\"name\":\"changeFundsGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getJurorsRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_termId\",\"type\":\"uint64\"}],\"name\":\"getMinActiveBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getConfigGovernor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxRequestedTransitions\",\"type\":\"uint64\"}],\"name\":\"heartbeat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromTermId\",\"type\":\"uint64\"},{\"name\":\"_feeToken\",\"type\":\"address\"},{\"name\":\"_fees\",\"type\":\"uint256[3]\"},{\"name\":\"_roundStateDurations\",\"type\":\"uint64[5]\"},{\"name\":\"_pcts\",\"type\":\"uint16[2]\"},{\"name\":\"_roundParams\",\"type\":\"uint64[4]\"},{\"name\":\"_appealCollateralParams\",\"type\":\"uint256[2]\"},{\"name\":\"_minActiveBalance\",\"type\":\"uint256\"}],\"name\":\"setConfig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_possibleRulings\",\"type\":\"uint256\"},{\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ejectFundsGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newModulesGovernor\",\"type\":\"address\"}],\"name\":\"changeModulesGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newConfigGovernor\",\"type\":\"address\"}],\"name\":\"changeConfigGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputeManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_termId\",\"type\":\"uint64\"}],\"name\":\"getConfig\",\"outputs\":[{\"name\":\"feeToken\",\"type\":\"address\"},{\"name\":\"fees\",\"type\":\"uint256[3]\"},{\"name\":\"roundStateDurations\",\"type\":\"uint64[5]\"},{\"name\":\"pcts\",\"type\":\"uint16[2]\"},{\"name\":\"roundParams\",\"type\":\"uint64[4]\"},{\"name\":\"appealCollateralParams\",\"type\":\"uint256[2]\"},{\"name\":\"minActiveBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFirstTermStartTime\",\"type\":\"uint64\"}],\"name\":\"delayStartTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_subscriber\",\"type\":\"address\"}],\"name\":\"getSubscriptionFees\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"feeToken\",\"type\":\"address\"},{\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_termId\",\"type\":\"uint64\"}],\"name\":\"getTerm\",\"outputs\":[{\"name\":\"startTime\",\"type\":\"uint64\"},{\"name\":\"randomnessBN\",\"type\":\"uint64\"},{\"name\":\"randomness\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastEnsuredTermId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_termParams\",\"type\":\"uint64[2]\"},{\"name\":\"_governors\",\"type\":\"address[3]\"},{\"name\":\"_feeToken\",\"type\":\"address\"},{\"name\":\"_fees\",\"type\":\"uint256[3]\"},{\"name\":\"_roundStateDurations\",\"type\":\"uint64[5]\"},{\"name\":\"_pcts\",\"type\":\"uint16[2]\"},{\"name\":\"_roundParams\",\"type\":\"uint64[4]\"},{\"name\":\"_appealCollateralParams\",\"type\":\"uint256[2]\"},{\"name\":\"_minActiveBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentGovernor\",\"type\":\"address\"}],\"name\":\"FundsGovernorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentGovernor\",\"type\":\"address\"}],\"name\":\"ConfigGovernorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentGovernor\",\"type\":\"address\"}],\"name\":\"ModulesGovernorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fromTermId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"courtConfigId\",\"type\":\"uint64\"}],\"name\":\"NewConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"AutomaticWithdrawalsAllowedChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousTermId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"currentTermId\",\"type\":\"uint64\"}],\"name\":\"Heartbeat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousStartTime\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"currentStartTime\",\"type\":\"uint64\"}],\"name\":\"StartTimeDelayed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"areWithdrawalsAllowedFor(address)\":{\"details\":\"Tell whether a certain holder accepts automatic withdrawals of tokens or not\",\"params\":{\"_holder\":\"Address of the token holder querying if withdrawals are allowed for\"},\"return\":\"True if the given holder accepts automatic withdrawals of their tokens, false otherwise\"},\"changeConfigGovernor(address)\":{\"params\":{\"_newConfigGovernor\":\"Address of the new config governor to be set\"}},\"changeFundsGovernor(address)\":{\"params\":{\"_newFundsGovernor\":\"Address of the new funds governor to be set\"}},\"changeModulesGovernor(address)\":{\"params\":{\"_newModulesGovernor\":\"Address of the new governor to be set\"}},\"closeEvidencePeriod(uint256)\":{\"params\":{\"_disputeId\":\"Identification number of the dispute to close its evidence submitting period\"}},\"constructor\":{\"details\":\"Constructor function\",\"params\":{\"_appealCollateralParams\":\"Array containing params for appeal collateral:       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal\",\"_feeToken\":\"Address of the token contract that is used to pay for fees\",\"_fees\":\"Array containing:       0. jurorFee Amount of fee tokens that is paid per juror per dispute       1. draftFee Amount of fee tokens per juror to cover the drafting cost       2. settleFee Amount of fee tokens per juror to cover round settlement cost\",\"_governors\":\"Array containing:       0. _fundsGovernor Address of the funds governor       1. _configGovernor Address of the config governor       2. _modulesGovernor Address of the modules governor\",\"_minActiveBalance\":\"Minimum amount of juror tokens that can be activated\",\"_pcts\":\"Array containing:       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (\\u2031 - 1/10,000)       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (\\u2031 - 1/10,000)\",\"_roundParams\":\"Array containing params for rounds:       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)\",\"_roundStateDurations\":\"Array containing the durations in terms of the different phases of a dispute:       0. evidenceTerms Max submitting evidence period duration in terms       1. commitTerms Commit period duration in terms       2. revealTerms Reveal period duration in terms       3. appealTerms Appeal period duration in terms       4. appealConfirmationTerms Appeal confirmation period duration in terms\",\"_termParams\":\"Array containing:       0. _termDuration Duration in seconds per term       1. _firstTermStartTime Timestamp in seconds when the court will open (to give time for juror on-boarding)\"}},\"createDispute(uint256,bytes)\":{\"params\":{\"_metadata\":\"Optional metadata that can be used to provide additional information on the dispute to be created\",\"_possibleRulings\":\"Number of possible rulings allowed for the drafted jurors to vote on the dispute\"},\"return\":\"Dispute identification number\"},\"delayStartTime(uint64)\":{\"params\":{\"_newFirstTermStartTime\":\"New timestamp in seconds when the court will open\"}},\"ejectFundsGovernor()\":{\"details\":\"This action cannot be rolled back, once the funds governor has been unset, funds cannot be recovered from recoverable modules anymore\"},\"ejectModulesGovernor()\":{\"details\":\"This action cannot be rolled back, once the modules governor has been unset, system modules cannot be changed anymore\"},\"ensureCurrentTerm()\":{\"return\":\"Identification number of the current term\"},\"ensureCurrentTermRandomness()\":{\"return\":\"Randomness of the current term\"},\"executeRuling(uint256)\":{\"params\":{\"_disputeId\":\"Identification number of the dispute to be executed\"}},\"getConfig(uint64)\":{\"details\":\"Tell the full Court configuration parameters at a certain term\",\"params\":{\"_termId\":\"Identification number of the term querying the Court config of\"},\"return\":\"token Address of the token used to pay for feesfees Array containing:        0. jurorFee Amount of fee tokens that is paid per juror per dispute        1. draftFee Amount of fee tokens per juror to cover the drafting cost        2. settleFee Amount of fee tokens per juror to cover round settlement costroundStateDurations Array containing the durations in terms of the different phases of a dispute:        0. evidenceTerms Max submitting evidence period duration in terms        1. commitTerms Commit period duration in terms        2. revealTerms Reveal period duration in terms        3. appealTerms Appeal period duration in terms        4. appealConfirmationTerms Appeal confirmation period duration in termspcts Array containing:        0. penaltyPct Permyriad of min active tokens balance to be locked for each drafted juror (\\u2031 - 1/10,000)        1. finalRoundReduction Permyriad of fee reduction for the last appeal round (\\u2031 - 1/10,000)roundParams Array containing params for rounds:        0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes        1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute        2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered        3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)appealCollateralParams Array containing params for appeal collateral:        0. appealCollateralFactor Multiple of dispute fees required to appeal a preliminary ruling        1. appealConfirmCollateralFactor Multiple of dispute fees required to confirm appeal\"},\"getConfigChangeTermId()\":{\"details\":\"Tell the term identification number of the next scheduled config change\",\"return\":\"Term identification number of the next scheduled config change\"},\"getConfigGovernor()\":{\"details\":\"Tell the address of the config governor\",\"return\":\"Address of the config governor\"},\"getCurrentTermId()\":{\"details\":\"Tell the current term identification number. Note that there may be pending term transitions.\",\"return\":\"Identification number of the current term\"},\"getDisputeFees()\":{\"details\":\"Tell the dispute fees information to create a dispute\",\"return\":\"recipient Address where the corresponding dispute fees must be transferred tofeeToken ERC20 token used for the feesfeeAmount Total amount of fees that must be allowed to the recipient\"},\"getDisputeManager()\":{\"details\":\"Tell the address of the DisputeManager module\",\"return\":\"Address of the DisputeManager module\"},\"getDraftConfig(uint64)\":{\"details\":\"Tell the draft config at a certain term\",\"params\":{\"_termId\":\"Identification number of the term querying the draft config of\"},\"return\":\"feeToken Address of the token used to pay for feesdraftFee Amount of fee tokens per juror to cover the drafting costpenaltyPct Permyriad of min active tokens balance to be locked for each drafted juror (\\u2031 - 1/10,000)\"},\"getFundsGovernor()\":{\"details\":\"Tell the address of the funds governor\",\"return\":\"Address of the funds governor\"},\"getJurorsRegistry()\":{\"details\":\"Tell the address of the JurorsRegistry module\",\"return\":\"Address of the JurorsRegistry module\"},\"getLastEnsuredTermId()\":{\"details\":\"Tell the last ensured term identification number\",\"return\":\"Identification number of the last ensured term\"},\"getMinActiveBalance(uint64)\":{\"details\":\"Tell the min active balance config at a certain term\",\"params\":{\"_termId\":\"Identification number of the term querying the min active balance config of\"},\"return\":\"Minimum amount of tokens jurors have to activate to participate in the Court\"},\"getModule(bytes32)\":{\"details\":\"Tell address of a module based on a given ID\",\"params\":{\"_id\":\"ID of the module being queried\"},\"return\":\"Address of the requested module\"},\"getModulesGovernor()\":{\"details\":\"Tell the address of the modules governor\",\"return\":\"Address of the modules governor\"},\"getNeededTermTransitions()\":{\"details\":\"Tell the number of terms the Court should transition to be up-to-date\",\"return\":\"Number of terms the Court should transition to be up-to-date\"},\"getSubscriptionFees(address)\":{\"details\":\"Tell the subscription fees information for a subscriber to be up-to-date\",\"params\":{\"_subscriber\":\"Address of the account paying the subscription fees for\"},\"return\":\"recipient Address where the corresponding subscriptions fees must be transferred tofeeToken ERC20 token used for the subscription feesfeeAmount Total amount of fees that must be allowed to the recipient\"},\"getSubscriptions()\":{\"details\":\"Tell the address of the Subscriptions module\",\"return\":\"Address of the Subscriptions module\"},\"getTerm(uint64)\":{\"details\":\"Tell the information related to a term based on its ID. Note that if the term has not been reached, the     information returned won't be computed yet. This function allows querying future terms that were not computed yet.\",\"params\":{\"_termId\":\"ID of the term being queried\"},\"return\":\"startTime Term start timerandomnessBN Block number used for randomness in the requested termrandomness Randomness computed for the requested term\"},\"getTermDuration()\":{\"details\":\"Tell the term duration of the Court\",\"return\":\"Duration in seconds of the Court term\"},\"getTermRandomness(uint64)\":{\"details\":\"Tell the randomness of a term even if it wasn't computed yet\",\"params\":{\"_termId\":\"Identification number of the term being queried\"},\"return\":\"Randomness of the requested term\"},\"getTreasury()\":{\"details\":\"Tell the address of the Treasury module\",\"return\":\"Address of the Treasury module\"},\"getVoting()\":{\"details\":\"Tell the address of the Voting module\",\"return\":\"Address of the Voting module\"},\"heartbeat(uint64)\":{\"params\":{\"_maxRequestedTransitions\":\"Max number of term transitions allowed by the sender\"},\"return\":\"Identification number of the term ID after executing the heartbeat transitions\"},\"setAutomaticWithdrawals(bool)\":{\"params\":{\"_allowed\":\"Whether or not the automatic withdrawals are allowed by the sender\"}},\"setConfig(uint64,address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)\":{\"params\":{\"_appealCollateralParams\":\"Array containing params for appeal collateral:       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal\",\"_feeToken\":\"Address of the token contract that is used to pay for fees\",\"_fees\":\"Array containing:       0. jurorFee Amount of fee tokens that is paid per juror per dispute       1. draftFee Amount of fee tokens per juror to cover the drafting cost       2. settleFee Amount of fee tokens per juror to cover round settlement cost\",\"_fromTermId\":\"Identification number of the term in which the config will be effective at\",\"_minActiveBalance\":\"Minimum amount of juror tokens that can be activated\",\"_pcts\":\"Array containing:       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (\\u2031 - 1/10,000)       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (\\u2031 - 1/10,000)\",\"_roundParams\":\"Array containing params for rounds:       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)\",\"_roundStateDurations\":\"Array containing the durations in terms of the different phases of a dispute:       0. evidenceTerms Max submitting evidence period duration in terms       1. commitTerms Commit period duration in terms       2. revealTerms Reveal period duration in terms       3. appealTerms Appeal period duration in terms       4. appealConfirmationTerms Appeal confirmation period duration in terms\"}},\"setModule(bytes32,address)\":{\"params\":{\"_addr\":\"Address of the module to be set\",\"_id\":\"ID of the module to be set\"}},\"setModules(bytes32[],address[])\":{\"params\":{\"_addresses\":\"List of addressed of each the module to be set\",\"_ids\":\"List of ids of each module to be set\"}}}},\"userdoc\":{\"methods\":{\"changeConfigGovernor(address)\":{\"notice\":\"Change config governor address to `_newConfigGovernor`\"},\"changeFundsGovernor(address)\":{\"notice\":\"Change funds governor address to `_newFundsGovernor`\"},\"changeModulesGovernor(address)\":{\"notice\":\"Change modules governor address to `_newModulesGovernor`\"},\"closeEvidencePeriod(uint256)\":{\"notice\":\"Close the evidence period of dispute #`_disputeId`\"},\"createDispute(uint256,bytes)\":{\"notice\":\"Create a dispute with `_possibleRulings` possible rulings\"},\"delayStartTime(uint64)\":{\"notice\":\"Delay the Court start time to `_newFirstTermStartTime`\"},\"ejectFundsGovernor()\":{\"notice\":\"Remove the funds governor. Set the funds governor to the zero address.\"},\"ejectModulesGovernor()\":{\"notice\":\"Remove the modules governor. Set the modules governor to the zero address.\"},\"ensureCurrentTerm()\":{\"notice\":\"Ensure that the current term of the Court is up-to-date. If the Court is outdated by more than `MAX_AUTO_TERM_TRANSITIONS_ALLOWED`        terms, the heartbeat function must be called manually instead.\"},\"ensureCurrentTermRandomness()\":{\"notice\":\"Ensure that a certain term has its randomness set. As we allow to draft disputes requested for previous terms, if there     were mined more than 256 blocks for the current term, the blockhash of its randomness BN is no longer available, given     round will be able to be drafted in the following term.\"},\"executeRuling(uint256)\":{\"notice\":\"Execute the Arbitrable associated to dispute #`_disputeId` based on its final ruling\"},\"heartbeat(uint64)\":{\"notice\":\"Transition up to `_maxRequestedTransitions` terms\"},\"setAutomaticWithdrawals(bool)\":{\"notice\":\"Set the automatic withdrawals config for the sender to `_allowed`\"},\"setConfig(uint64,address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)\":{\"notice\":\"Change Court configuration params\"},\"setModule(bytes32,address)\":{\"notice\":\"Set module `_id` to `_addr`\"},\"setModules(bytes32[],address[])\":{\"notice\":\"Set many modules at once\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/AragonCourt.sol\":\"AragonCourt\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrable.sol\":{\"keccak256\":\"0xd7c4487ecd2fe5a68f833bf0854f8314171582ce1b0b56997ed266a6c87b890c\",\"urls\":[\"bzzr://6acc996df979a6bb968228a5c03cb8988542b8e2cefb4c25da0b540f47084cb6\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrator.sol\":{\"keccak256\":\"0x23d06cec97e357d05e4c2fd90990e11a938c8648885884cdcc83a9fda5e51d8c\",\"urls\":[\"bzzr://1d9691027f3a448d3a9018a8275ad973e3fc04c6f5e2fdc99fe1c76c286b6165\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/AragonCourt.sol\":{\"keccak256\":\"0xae2ab34fad7f746c46c94bad36fa30caae097ff4e67dbca64d02426b69b0a18a\",\"urls\":[\"bzzr://b8770e48c3ee27201039980b1f083f3d439bc39dcaf70cf4fd82398e821abd7d\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/clock/CourtClock.sol\":{\"keccak256\":\"0x2188397d82d7db893a04f7286c9b5d8a356c920f8067ab79987ebf31b0d3a7e9\",\"urls\":[\"bzzr://c7c4951a83dbd293f8c5495329b1141621162aa81d38e44823898f4f3114407d\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/clock/IClock.sol\":{\"keccak256\":\"0xa4cb535a94d3cfb76b91a224d90202a478acb33732b79b71859d419c801c8be1\",\"urls\":[\"bzzr://472d2bd29b77d1810ff83ec767dcf1600df6fc9af73edf55b8caf7862efb6362\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/config/CourtConfig.sol\":{\"keccak256\":\"0x3c934b285a2d0cad4de7c70fd30a9636b058a9a648a3a9e6bbe9dd149924f255\",\"urls\":[\"bzzr://ad8a7b84938eee6dfaca1d5c00699adea2ca51c4d0d673510fb7397770fa4dc2\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/config/CourtConfigData.sol\":{\"keccak256\":\"0xf1982c291fdc0038d055f6bea90d4522db7bf9ab8093d2cc01a58dfd1eb6e277\",\"urls\":[\"bzzr://9706c6cb9ccd7ba46b96a5a28b38407dc056c0a456601d59e62009f88c6864ce\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/config/IConfig.sol\":{\"keccak256\":\"0xeb5e3ab6cc22b83dd4dd3b717cf26148a01f00ae9be3951cfebd5ccc7e8b038f\",\"urls\":[\"bzzr://cae5a41479df24fc3867e1dfeb6a28d656ff52bb41caf727a59a772e343bc5e6\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/controller/Controller.sol\":{\"keccak256\":\"0x6a331eaff629f484f608b53d6445ec50137ccd1df6be1731c2338a2cca5449b9\",\"urls\":[\"bzzr://7c2a1e8b81904ea4267b96d4d441db179eb400a3238d3c880e967926f36ce92f\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/disputes/IDisputeManager.sol\":{\"keccak256\":\"0x62ff9b77c42c9ab364daf53f02192d6d2f8a0d0c27700325d6b5d895e70dbce3\",\"urls\":[\"bzzr://9ea1008a86fb6ba0043b56dab119902fd9b7c482fe6ce1e93f2f62e9cea9c34b\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/PctHelpers.sol\":{\"keccak256\":\"0x99d266f1d6fe9e0a04e807bd64136d9ea408d0fee4e48f108d4c828de2facbb9\",\"urls\":[\"bzzr://b0a435442b075f37c83383ee553faa23c793a66d433678e2956cfc002f4bc9b3\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/ERC20.sol\":{\"keccak256\":\"0x4e84685964c17a5b5d1fd4c8996c58289991d2d1fdfc67ace431e88026dd1f0b\",\"urls\":[\"bzzr://5224322bb915c1c761dc44d362515cfbb5a98635157f95e0f474579134dd58b8\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/IsContract.sol\":{\"keccak256\":\"0x27e50127cbbad09c8a55a75930dca60355a186618049c2038d99a06612d164b2\",\"urls\":[\"bzzr://68b3a1e5984833a6f9044f68d34ec944e13ccc1e58abd9893c996bba7045b57b\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/SafeMath.sol\":{\"keccak256\":\"0x6036ebab6d4a52731f880ec7449c2ed7e7f9b10412574ed43ae2c42abd8fb892\",\"urls\":[\"bzzr://5b602d630dc188fb7dd005bedc448758ae6576e988f1600cb1d1308f915578df\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/SafeMath64.sol\":{\"keccak256\":\"0x0c2a9eddc07d5fa9bba7b2d21df9fb07a12225b8dd3c3ececb9ab4393666e96c\",\"urls\":[\"bzzr://ce326b8e14f3c20d4394c6d1593733d0560cbadcbf148553f2d2dc90daafc99b\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/TimeHelpers.sol\":{\"keccak256\":\"0x7958528aa33a66597d4e92a3ff83e3b3e5a40e3cbae40104d13e6ce16472880c\",\"urls\":[\"bzzr://1662660e43a46dfe402b7ebe2c73fbc5012dd2392b8b1859ad9337f220e3331c\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/Uint256Helpers.sol\":{\"keccak256\":\"0x9b22131e343305f10c088be545cd14d552c3e08b84fefd6cd45c21ffce29cff8\",\"urls\":[\"bzzr://d0bc65b915314e19dfde57e14192b034ed2a08a3fa4f25497687fa0d90906aaa\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/standards/ERC165.sol\":{\"keccak256\":\"0xc064fa19bd061314577799dbb802ed657db49bedb2f52663efae2a52902f70b3\",\"urls\":[\"bzzr://1e1da5099a8055a1047ac174b88f46d23f9217508fb4a1a872d21173509b618f\"]},\"/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/subscriptions/ISubscriptions.sol\":{\"keccak256\":\"0xefc8b5fc2c639172e81ffa1accf061798a8376321c459f8ca09fc9cf788ad83b\",\"urls\":[\"bzzr://915dbb38b84efada01f434cdfb88d4813bbaf8f15f0e2718b9ae32e707260953\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516102e08062004cbd83398101806040526102e08110156200003557600080fd5b5060a08101516102c082015160408301919060c08401906101208501906101c0860190610200870190610280880190888888888888888888868686868686868f60008181602002015190506000826001602002015190506301e133806001600160401b0316826001600160401b0316106040518060400160405280601a81526020017f434c4b5f5445524d5f4455524154494f4e5f544f4f5f4c4f4e470000000000008152509062000182576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620001465781810151838201526020016200012c565b50505050905090810190601f168015620001745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5081620001946200040e60201b60201c565b016001600160401b0316816001600160401b031610156040518060400160405280601d81526020017f434c4b5f4241445f46495253545f5445524d5f53544152545f54494d450000008152509062000249576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b506301e13380600202620002626200040e60201b60201c565b016001600160401b0316816001600160401b031611156040518060400160405280601d81526020017f434c4b5f4241445f46495253545f5445524d5f53544152545f54494d450000008152509062000317576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b50600080546001600160401b038085166001600160401b0319928316178355918052600160208190527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4980549590940390921693169290921790559050620003816003826200122d565b506200039c600080898989898989896200043b60201b60201c565b50505050505050620003c688600060038110620003b557fe5b60200201516200102b60201b60201c565b620003de88600160200201516200109560201b60201c565b620003f68860026020020151620010ff60201b60201c565b50505050505050505050505050505050505062001300565b600062000435620004246200116960201b60201c565b6200116d60201b620035e01760201c565b90505b90565b6001600160401b0389161580620004635750886001600160401b0316886001600160401b0316115b6040518060400160405280601181526020017f434f4e465f544f4f5f4f4c445f5445524d0000000000000000000000000000008152509062000502576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b50815115801590620005175750602082015115155b6040518060400160405280601b81526020017f434f4e465f5a45524f5f434f4c4c41544552414c5f464143544f52000000000081525090620005b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b50620005d58460005b60200201516200121e60201b620035cd1760201c565b6040518060400160405280601881526020017f434f4e465f494e56414c49445f50454e414c54595f50435400000000000000008152509062000674576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b5062000682846001620005bf565b6040518060400160405280602081526020017f434f4e465f494e56414c49445f46494e414c5f524f554e445f5245445f5043548152509062000721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b50825160408051808201909152601e81527f434f4e465f4241445f494e495449414c5f4a55524f52535f4e554d42455200006020820152906001600160401b0316620007ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b50600083600160200201516001600160401b0316116040518060400160405280601b81526020017f434f4e465f4241445f41505045414c5f535445505f464143544f520000000000815250906200087e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b5060408301516001600160401b031660008115801590620008a05750600a8211155b9050806040518060400160405280601e81526020017f434f4e465f494e56414c49445f4d41585f41505045414c5f524f554e445300008152509062000942576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b5060005b600581101562000a3f5760008882600581106200095f57fe5b60200201516001600160401b03161180156200099657506121de8882600581106200098657fe5b60200201516001600160401b0316105b6040518060400160405280601f81526020017f434f4e465f4c415247455f524f554e445f50484153455f4455524154494f4e008152509062000a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b5060010162000946565b5060408051808201909152601c81527f434f4e465f5a45524f5f4d494e5f4143544956455f42414c414e43450000000060208201528362000add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b506002546001600160401b03808d169116111562000b16576002546001600160401b031660009081526004602052604081205562000b2c565b600380549062000b2a90600183016200122d565b505b600380546000198101916000916001600160401b03841690811062000b4d57fe5b90600052602060002090600b020190506040518060a001604052808c6001600160a01b031681526020018960016002811062000b8557fe5b602002015161ffff1681526020018b60006003811062000ba157fe5b602002015181526020018b60016003811062000bb957fe5b602002015181526020018b60026003811062000bd157fe5b60209081029190910151909152815183549183015161ffff167401000000000000000000000000000000000000000002600160a01b61ffff02196001600160a01b039092166001600160a01b03199093169290921716178255604080820151600184015560608201516002840155608090910151600383015580516101808101909152808a600060200201516001600160401b031681526020018a60016005811062000c7957fe5b60200201516001600160401b031681526020018a60026005811062000c9a57fe5b60200201516001600160401b031681526020018a60036005811062000cbb57fe5b60200201516001600160401b031681526020018a60046005811062000cdc57fe5b60200201516001600160401b031681526020018960006002811062000cfd57fe5b602002015161ffff1681526020018860006004811062000d1957fe5b60200201516001600160401b031681526020018860016004811062000d3a57fe5b60200201516001600160401b031681526020018860036004811062000d5b57fe5b60200201516001600160401b031681526020018581526020018760006002811062000d8257fe5b602002015181526020018760016002811062000d9a57fe5b60200201518152508160040160008201518160000160006101000a8154816001600160401b0302191690836001600160401b0316021790555060208201518160000160086101000a8154816001600160401b0302191690836001600160401b0316021790555060408201518160000160106101000a8154816001600160401b0302191690836001600160401b0316021790555060608201518160000160186101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160401b0302191690836001600160401b0316021790555060a08201518160010160086101000a81548161ffff021916908361ffff16021790555060c082015181600101600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060e08201518160010160126101000a8154816001600160401b0302191690836001600160401b031602179055506101008201518160020160006101000a8154816001600160401b0302191690836001600160401b031602179055506101208201518160030155610140820151816004015561016082015181600501559050508481600a0181905550816001600160401b0316600460008e6001600160401b03166001600160401b03168152602001908152602001600020819055508b600260006101000a8154816001600160401b0302191690836001600160401b031602179055507ff991c74e88b00b8de409caf790045f133e9a8283d3b989db88e2b2d93612c3a78c8360405180836001600160401b03166001600160401b03168152602001826001600160401b03166001600160401b031681526020019250505060405180910390a150505050505050505050505050565b600654604080516001600160a01b039283168152918316602083015280517f2e8176039aca48fb2df80d8a3f0c25cf4f12ba7ba15aabe562bd39f71967954f9281900390910190a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b039283168152918316602083015280517fad1fe49159fc13ce805cb23e72eb6724c008509c8095b9499752efea5747af3e9281900390910190a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b039283168152918316602083015280517faf8bba87fb343f5755495c80323f32cd6bbfaebd666ff5abac709bc1f76f2f179281900390910190a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b4290565b60408051808201909152601581527f55494e5436345f4e554d4245525f544f4f5f424947000000000000000000000060208201526000906001600160401b0383111562001217576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315620001465781810151838201526020016200012c565b5090919050565b61271061ffff82161115919050565b8154818355818111156200125c57600b0281600b0283600052602060002091820191016200125c919062001261565b505050565b6200043891905b80821115620012fc5780546001600160b01b03191681556000600182018190556002820181905560038201819055600482018190556005820180547fffffffffffff00000000000000000000000000000000000000000000000000001690556006820180546001600160401b0319169055600782018190556008820181905560098201819055600a820155600b0162001268565b5090565b6139ad80620013106000396000f3fe608060405234801561001057600080fd5b50600436106102925760003560e01c806385acd64111610160578063c13517e1116100d8578063e008cb621161008c578063e3f2311e11610071578063e3f2311e1461088c578063f137b44e146108b2578063f7fe57891461090457610292565b8063e008cb621461073f578063e36057b71461086557610292565b8063d7a84693116100bd578063d7a84693146106eb578063d9296df214610711578063db9bee461461073757610292565b8063c13517e11461066c578063cf0a5af3146106e357610292565b8063953e46a01161012f57806397023f811161011457806397023f81146105e35780639bf6fa57146105eb578063a949e9821461061257610292565b8063953e46a0146105b457806395f3c2da146105bc57610292565b806385acd6411461054c5780638bb04875146105695780638c8bd218146105865780638de10e871461058e57610292565b8063408a26401161020e5780636991fdb8116101c25780637d1f24c9116101a75780637d1f24c9146105085780637e9adccf146105105780637fb011d61461052d57610292565b80636991fdb8146104ce5780637b751b9e146104d657610292565b8063541cd468116101f3578063541cd4681461041657806361f3be6a14610442578063696670051461047b57610292565b8063408a26401461040657806350c365801461040e57610292565b806327fe748c116102655780633b47a9ac1161024a5780633b47a9ac146103ee5780633c28e88b146103f65780633f33bf86146103fe57610292565b806327fe748c146103ac5780633b19e84a146103e657610292565b806308135a93146102975780631986d376146102bc57806322f8f6f3146102e057806324bdf713146102e8575b600080fd5b61029f61090c565b6040805167ffffffffffffffff9092168252519081900360200190f35b6102c461091c565b604080516001600160a01b039092168252519081900360200190f35b61029f610947565b6103aa600480360360408110156102fe57600080fd5b81019060208101813564010000000081111561031957600080fd5b82018360208201111561032b57600080fd5b8035906020019184602083028401116401000000008311171561034d57600080fd5b91939092909160208101903564010000000081111561036b57600080fd5b82018360208201111561037d57600080fd5b8035906020019184602083028401116401000000008311171561039f57600080fd5b509092509050610957565b005b6103d2600480360360208110156103c257600080fd5b50356001600160a01b0316610afd565b604080519115158252519081900360200190f35b6102c4610b1f565b6102c4610b4a565b6102c4610b54565b61029f610b63565b6102c4610b6d565b61029f610b7c565b6103aa6004803603604081101561042c57600080fd5b50803590602001356001600160a01b0316610b86565b6104696004803603602081101561045857600080fd5b503567ffffffffffffffff16610c26565b60408051918252519081900360200190f35b6104a26004803603602081101561049157600080fd5b503567ffffffffffffffff16610cdc565b604080516001600160a01b039094168452602084019290925261ffff1682820152519081900360600190f35b61029f610d04565b6104de610d14565b604080516001600160a01b0394851681529290931660208301528183015290519081900360600190f35b610469610d9e565b6103aa6004803603602081101561052657600080fd5b5035610e7b565b6103aa6004803603602081101561054357600080fd5b50351515610f05565b6102c46004803603602081101561056257600080fd5b5035610f79565b6103aa6004803603602081101561057f57600080fd5b5035610f8a565b6103aa6110a0565b6103aa600480360360208110156105a457600080fd5b50356001600160a01b031661113e565b6102c4611269565b610469600480360360208110156105d257600080fd5b503567ffffffffffffffff16611294565b6102c46112ab565b61029f6004803603602081101561060157600080fd5b503567ffffffffffffffff166112ba565b6103aa600480360361026081101561062957600080fd5b5067ffffffffffffffff813516906001600160a01b0360208201351690604081019060a081019061014081019061018081019061020081019061024001356112c5565b6104696004803603604081101561068257600080fd5b813591908101906040810160208201356401000000008111156106a457600080fd5b8201836020820111156106b657600080fd5b803590602001918460018302840111640100000000831117156106d857600080fd5b509092509050611433565b6103aa61174c565b6103aa6004803603602081101561070157600080fd5b50356001600160a01b03166117e8565b6103aa6004803603602081101561072757600080fd5b50356001600160a01b0316611910565b6102c4611a38565b6107666004803603602081101561075557600080fd5b503567ffffffffffffffff16611a42565b6040516001600160a01b03881681526020810187606080838360005b8381101561079a578181015183820152602001610782565b5050505090500186600560200280838360005b838110156107c55781810151838201526020016107ad565b5050505090500185600260200280838360005b838110156107f05781810151838201526020016107d8565b5050505090500184600460200280838360005b8381101561081b578181015183820152602001610803565b5050505090500183600260200280838360005b8381101561084657818101518382015260200161082e565b5050505090500182815260200197505050505050505060405180910390f35b6103aa6004803603602081101561087b57600080fd5b503567ffffffffffffffff16611a9b565b6104de600480360360208110156108a257600080fd5b50356001600160a01b0316611b36565b6108d9600480360360208110156108c857600080fd5b503567ffffffffffffffff16611bde565b6040805167ffffffffffffffff94851681529290931660208301528183015290519081900360600190f35b61029f611c18565b6000610916611c22565b90505b90565b60006109167f7cbb12e82a6d63ff16fe43977f43e3e2b247ecd4e62c0e340da8800a48c67346611c4e565b60005467ffffffffffffffff1690565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314610a2557604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109ea5781810151838201526020016109d2565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051808201909152601e81527f4354525f494e56414c49445f494d504c535f494e5055545f4c454e47544800006020820152838214610aab57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060005b83811015610af657610aee858583818110610ac657fe5b90506020020135848484818110610ad957fe5b905060200201356001600160a01b0316611c69565b600101610aaf565b5050505050565b6001600160a01b03811660009081526005602052604090205460ff165b919050565b60006109167f06aa03964db1f7257357ef09714a5f0ca3633723df419e97015e0c7a3e83edb7611c4e565b6000610916611d6d565b6006546001600160a01b031690565b6000610916611d98565b6008546001600160a01b031690565b6000610916611e76565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314610c1757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50610c228282611c69565b5050565b6000805460408051808201909152601781527f434c4b5f5445524d5f444f45535f4e4f545f45584953540000000000000000006020820152839167ffffffffffffffff6801000000000000000090910481169083161115610ccb57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50610cd583611ef1565b9392505050565b600080600080610cea611fd5565b9050610cf68582611ff1565b935093509350509193909250565b60025467ffffffffffffffff1690565b6000806000610d21612036565b92506000839050806001600160a01b0316637b751b9e6040518163ffffffff1660e01b8152600401604080518083038186803b158015610d6057600080fd5b505afa158015610d74573d6000803e3d6000fd5b505050506040513d6040811015610d8a57600080fd5b508051602090910151949590949350915050565b6000805468010000000000000000900467ffffffffffffffff168082526001602081905260408320908101548015610dda579250610919915050565b6000610de584611ef1565b60408051808201909152601f81527f434c4b5f5445524d5f52414e444f4d4e4553535f554e415641494c41424c4500602082015290915081610e6b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060019092018290555091505090565b336000610e86612036565b9050806001600160a01b031663c39c83d183856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610ee857600080fd5b505af1158015610efc573d6000803e3d6000fd5b50505050505050565b3360008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515908117909155825190815291517f189949428c2e58715ea2f0be0d702bc14e73743bdbb58814a595c19e1285c5be9281900390910190a250565b6000610f8482611c4e565b92915050565b6000610f94612036565b9050600080826001600160a01b031663bd881e53856040518263ffffffff1660e01b8152600401808281526020019150506040805180830381600087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d604081101561100857600080fd5b508051602090910151604080517f311a6c560000000000000000000000000000000000000000000000000000000081526004810188905260ff8316602482015290519294509092506001600160a01b0384169163311a6c569160448082019260009290919082900301818387803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b5050505050505050565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461113157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061113c6000612061565b565b60065460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146111cf57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b03821661125c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50611266816120d8565b50565b60006109167f3b21d36b36308c830e6c4053fb40a3b6d79dde78947fbf6b0accd30720ab5370611c4e565b60008061129f611fd5565b9050610cd5838261214f565b6007546001600160a01b031690565b6000610f8482612168565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461135657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000611361611d98565b9050611428818a8a8a6003806020026040519081016040528092919082600360200280828437600092019190915250506040805160a081810190925291508c9060059083908390808284376000920191909152505060408051808201825291508c9060029083908390808284376000920191909152505060408051608081810190925291508c9060049083908390808284376000920191909152505060408051808201825291508c9060029083908390808284376000920191909152508c91506123a59050565b505050505050505050565b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f88f3ee690000000000000000000000000000000000000000000000000000000060048201529051600091339182916301ffc9a7916024808301926020929190829003018186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d60208110156114d857600080fd5b505160408051808201909152601881527f41435f53454e4445525f4e4f545f41524249545241424c45000000000000000060208201529061155d57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000611568611d6d565b9050806001600160a01b031663fd8e3934836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156115c057600080fd5b505afa1580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b505160408051808201909152601881527f41435f535542534352495054494f4e5f4e4f545f50414944000000000000000060208201529061166f57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600061167a612036565b9050806001600160a01b0316631d2fa1fb846116958a612eef565b60405163ffffffff841660e01b81526001600160a01b0383166004820190815260ff83166024830152606060448301908152606483018c90528c928c929190608401848480828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051979650505050505050565b60065460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146117dd57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061113c60006120d8565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461187957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b03821661190657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061126681612061565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146119a157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b038216611a2e57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061126681612f80565b6000610916612036565b6000611a4c613823565b611a54613841565b611a5c61385f565b611a6461387d565b611a6c61385f565b600080611a77611fd5565b9050611a838982612ff7565b959f949e50929c50909a509850965090945092505050565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314611b2c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50611266816132c7565b6000806000611b43611d6d565b92506000839050806001600160a01b0316630a771c25866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060606040518083038186803b158015611ba057600080fd5b505afa158015611bb4573d6000803e3d6000fd5b505050506040513d6060811015611bca57600080fd5b508051602090910151949690955092505050565b67ffffffffffffffff9081166000908152600160208190526040909120805491015481831693680100000000000000009092049092169190565b6000610916611fd5565b6000610916611c2f611e76565b60005468010000000000000000900467ffffffffffffffff16906134b1565b6000908152600960205260409020546001600160a01b031690565b611c7281613553565b6040518060400160405280601f81526020017f4354525f494d504c454d454e544154494f4e5f4e4f545f434f4e54524143540081525090611cf757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600082815260096020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03851690811790915582518581529182015281517f0669329f751b07de4aa82f60514a409d0dfaef266e791a4a65a95b07b1c4c324929181900390910190a15050565b60006109167f2bfa3327fe52344390da94c32a346eeb1b65a8b583e4335a419b9471e88c1365611c4e565b600080611da3611e76565b60408051808201909152601881527f434c4b5f544f4f5f4d414e595f5452414e534954494f4e5300000000000000006020820152909150600167ffffffffffffffff83161115611e3757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5067ffffffffffffffff8116611e6757505060005468010000000000000000900467ffffffffffffffff16610919565b611e7081612168565b91505090565b6000805467ffffffffffffffff6801000000000000000090910481168252600160205260408220541680611ea8613572565b67ffffffffffffffff161015611ec2576000915050610919565b60005467ffffffffffffffff1681611ed8613572565b0367ffffffffffffffff1681611eea57fe5b0491505090565b67ffffffffffffffff808216600090815260016020526040812080549192909168010000000000000000900416611f26613584565b67ffffffffffffffff16116040518060400160405280601b81526020017f434c4b5f5445524d5f52414e444f4d4e4553535f4e4f545f594554000000000081525090611fb657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b505468010000000000000000900467ffffffffffffffff164092915050565b60005468010000000000000000900467ffffffffffffffff1690565b6000806000806120018686613591565b805460028201546005909201546001600160a01b039091169891975068010000000000000000900461ffff1695509350505050565b60006109167f14a6c70f0f6d449c014c7bbc9e68e31e79e8474fb03b7194df83109a2d888ae6611c4e565b600854604080516001600160a01b039283168152918316602083015280517faf8bba87fb343f5755495c80323f32cd6bbfaebd666ff5abac709bc1f76f2f179281900390910190a16008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600654604080516001600160a01b039283168152918316602083015280517f2e8176039aca48fb2df80d8a3f0c25cf4f12ba7ba15aabe562bd39f71967954f9281900390910190a16006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008061215c8484613591565b600a0154949350505050565b600080612173611e76565b905060008167ffffffffffffffff168467ffffffffffffffff1610612198578161219a565b835b67ffffffffffffffff169050600081116040518060400160405280601c81526020017f434c4b5f494e56414c49445f5452414e534954494f4e5f5445524d53000000008152509061222f57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600061223a613584565b60005490915068010000000000000000900467ffffffffffffffff168060015b8481116123165767ffffffffffffffff80831660009081526001602081905260408083209590910192831682529020909290612295846135c4565b60005482546122b79167ffffffffffffffff918216911663ffffffff6134b116565b815467ffffffffffffffff191667ffffffffffffffff918216177fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff1668010000000000000000600189810193909316021790915591909101905061225a565b506000805467ffffffffffffffff8084166801000000000000000081027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff90931692909217909255604080519285168352602083019190915280517fb8818b6d0c27e4fc7cf75de16ac2543426d3c0bcc520931d24e5a7dde4adca119281900390910190a19695505050505050565b67ffffffffffffffff891615806123cf57508867ffffffffffffffff168867ffffffffffffffff16115b6040518060400160405280601181526020017f434f4e465f544f4f5f4f4c445f5445524d0000000000000000000000000000008152509061245457604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b508151158015906124685750602082015115155b6040518060400160405280601b81526020017f434f4e465f5a45524f5f434f4c4c41544552414c5f464143544f520000000000815250906124ed57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506124ff8460005b60200201516135cd565b6040518060400160405280601881526020017f434f4e465f494e56414c49445f50454e414c54595f50435400000000000000008152509061258457604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506125908460016124f5565b6040518060400160405280602081526020017f434f4e465f494e56414c49445f46494e414c5f524f554e445f5245445f5043548152509061261557604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50825160408051808201909152601e81527f434f4e465f4241445f494e495449414c5f4a55524f52535f4e554d424552000060208201529067ffffffffffffffff166126a557604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000836001602002015167ffffffffffffffff16116040518060400160405280601b81526020017f434f4e465f4241445f41505045414c5f535445505f464143544f5200000000008152509061274057604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50604083015167ffffffffffffffff16600081158015906127625750600a8211155b9050806040518060400160405280601e81526020017f434f4e465f494e56414c49445f4d41585f41505045414c5f524f554e44530000815250906127ea57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060005b60058110156128ca57600088826005811061280557fe5b602002015167ffffffffffffffff1611801561283c57506121de88826005811061282b57fe5b602002015167ffffffffffffffff16105b6040518060400160405280601f81526020017f434f4e465f4c415247455f524f554e445f50484153455f4455524154494f4e00815250906128c157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506001016127ee565b5060408051808201909152601c81527f434f4e465f5a45524f5f4d494e5f4143544956455f42414c414e43450000000060208201528361294e57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060025467ffffffffffffffff808d16911611156129875760025467ffffffffffffffff1660009081526004602052604081205561299b565b6003805490612999906001830161389b565b505b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81019160009167ffffffffffffffff84169081106129da57fe5b90600052602060002090600b020190506040518060a001604052808c6001600160a01b0316815260200189600160028110612a1157fe5b602002015161ffff1681526020018b600060038110612a2c57fe5b602002015181526020018b600160038110612a4357fe5b602002015181526020018b600260038110612a5a57fe5b60209081029190910151909152815183549183015161ffff1674010000000000000000000000000000000000000000027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff6001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff199093169290921716178255604080820151600184015560608201516002840155608090910151600383015580516101808101909152808a6000602002015167ffffffffffffffff1681526020018a600160058110612b2657fe5b602002015167ffffffffffffffff1681526020018a600260058110612b4757fe5b602002015167ffffffffffffffff1681526020018a600360058110612b6857fe5b602002015167ffffffffffffffff1681526020018a600460058110612b8957fe5b602002015167ffffffffffffffff16815260200189600060028110612baa57fe5b602002015161ffff16815260200188600060048110612bc557fe5b602002015167ffffffffffffffff16815260200188600160048110612be657fe5b602002015167ffffffffffffffff16815260200188600360048110612c0757fe5b602002015167ffffffffffffffff16815260200185815260200187600060028110612c2e57fe5b6020020151815260200187600160028110612c4557fe5b60200201518152508160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160010160086101000a81548161ffff021916908361ffff16021790555060c082015181600101600a6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060e08201518160010160126101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101008201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101208201518160030155610140820151816004015561016082015181600501559050508481600a01819055508167ffffffffffffffff16600460008e67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020819055508b600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507ff991c74e88b00b8de409caf790045f133e9a8283d3b989db88e2b2d93612c3a78c83604051808367ffffffffffffffff1667ffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019250505060405180910390a150505050505050505050505050565b60408051808201909152601481527f55494e54385f4e554d4245525f544f4f5f424947000000000000000000000000602082015260009060ff831115612f7957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5090919050565b600754604080516001600160a01b039283168152918316602083015280517fad1fe49159fc13ce805cb23e72eb6724c008509c8095b9499752efea5747af3e9281900390910190a16007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000613001613823565b613009613841565b61301161385f565b61301961387d565b61302161385f565b60008061302e8a8a613591565b905060008160000190508060000160009054906101000a90046001600160a01b03169850604051806060016040528082600101548152602001826002015481526020018260030154815250975060008260040190506040518060a001604052808260000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250975060405180604001604052808260010160089054906101000a900461ffff1661ffff1661ffff1681526020018360000160149054906101000a900461ffff1661ffff1661ffff168152509650604051806080016040528082600101600a9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260010160129054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001826003015467ffffffffffffffff1667ffffffffffffffff1681526020018260020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525095506040518060400160405280826004015481526020018260050154815250945082600a0154935050505092959891949750929550565b6132cf611c22565b60408051808201909152601e81527f434c4b5f43414e4e4f545f44454c41595f535441525445445f434f555254000060208201529067ffffffffffffffff161561335d57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000808052600160205280547fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4980549092916133ad9167ffffffffffffffff908116911663ffffffff6134b116565b90508067ffffffffffffffff168367ffffffffffffffff16116040518060400160405280602081526020017f434c4b5f43414e4e4f545f44454c41595f504153545f53544152545f54494d458152509061344b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600054825467ffffffffffffffff191667ffffffffffffffff91821685038216178355604080518383168152918516602083015280517f9b735da8a0762c6e913df06587b4fa81f87b8075e2a2afdeae6afde9456fd8799281900390910190a1505050565b60408051808201909152601381527f4d41544836345f4144445f4f564552464c4f570000000000000000000000000060208201526000908383019067ffffffffffffffff808616908316101561354b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b509392505050565b60006001600160a01b03821661356b57506000610b1a565b503b151590565b600061091661357f6135dc565b6135e0565b600061091661357f613671565b60008061359e8484613675565b9050600381815481106135ad57fe5b90600052602060002090600b020191505092915050565b6112668161370a565b61271061ffff82161115919050565b4290565b60408051808201909152601581527f55494e5436345f4e554d4245525f544f4f5f4249470000000000000000000000602082015260009067ffffffffffffffff831115612f7957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b4390565b60008167ffffffffffffffff168367ffffffffffffffff16116136b2575067ffffffffffffffff8216600090815260046020526040902054610f84565b60025467ffffffffffffffff90811690841681116136ea5767ffffffffffffffff166000908152600460205260409020549050610f84565b505067ffffffffffffffff16600090815260046020526040902054919050565b67ffffffffffffffff811660009081526004602052604090205480610c2257600060048161374967ffffffffffffffff8616600163ffffffff61377d16565b67ffffffffffffffff9081168252602080830193909352604091820160009081205491871681526004909352912055505050565b60008267ffffffffffffffff168267ffffffffffffffff1611156040518060400160405280601481526020017f4d41544836345f5355425f554e444552464c4f570000000000000000000000008152509061381c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5050900390565b60405180606001604052806003906020820280388339509192915050565b6040518060a001604052806005906020820280388339509192915050565b60405180604001604052806002906020820280388339509192915050565b60405180608001604052806004906020820280388339509192915050565b8154818355818111156138c757600b0281600b0283600052602060002091820191016138c791906138cc565b505050565b61091991905b8082111561397d5780547fffffffffffffffffffff000000000000000000000000000000000000000000001681556000600182018190556002820181905560038201819055600482018190556005820180547fffffffffffff000000000000000000000000000000000000000000000000000016905560068201805467ffffffffffffffff19169055600782018190556008820181905560098201819055600a820155600b016138d2565b509056fea165627a7a72305820e2d4166bf76ae015859385844bc784a498d413720f4c4bc6967453590ecd4a410029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102925760003560e01c806385acd64111610160578063c13517e1116100d8578063e008cb621161008c578063e3f2311e11610071578063e3f2311e1461088c578063f137b44e146108b2578063f7fe57891461090457610292565b8063e008cb621461073f578063e36057b71461086557610292565b8063d7a84693116100bd578063d7a84693146106eb578063d9296df214610711578063db9bee461461073757610292565b8063c13517e11461066c578063cf0a5af3146106e357610292565b8063953e46a01161012f57806397023f811161011457806397023f81146105e35780639bf6fa57146105eb578063a949e9821461061257610292565b8063953e46a0146105b457806395f3c2da146105bc57610292565b806385acd6411461054c5780638bb04875146105695780638c8bd218146105865780638de10e871461058e57610292565b8063408a26401161020e5780636991fdb8116101c25780637d1f24c9116101a75780637d1f24c9146105085780637e9adccf146105105780637fb011d61461052d57610292565b80636991fdb8146104ce5780637b751b9e146104d657610292565b8063541cd468116101f3578063541cd4681461041657806361f3be6a14610442578063696670051461047b57610292565b8063408a26401461040657806350c365801461040e57610292565b806327fe748c116102655780633b47a9ac1161024a5780633b47a9ac146103ee5780633c28e88b146103f65780633f33bf86146103fe57610292565b806327fe748c146103ac5780633b19e84a146103e657610292565b806308135a93146102975780631986d376146102bc57806322f8f6f3146102e057806324bdf713146102e8575b600080fd5b61029f61090c565b6040805167ffffffffffffffff9092168252519081900360200190f35b6102c461091c565b604080516001600160a01b039092168252519081900360200190f35b61029f610947565b6103aa600480360360408110156102fe57600080fd5b81019060208101813564010000000081111561031957600080fd5b82018360208201111561032b57600080fd5b8035906020019184602083028401116401000000008311171561034d57600080fd5b91939092909160208101903564010000000081111561036b57600080fd5b82018360208201111561037d57600080fd5b8035906020019184602083028401116401000000008311171561039f57600080fd5b509092509050610957565b005b6103d2600480360360208110156103c257600080fd5b50356001600160a01b0316610afd565b604080519115158252519081900360200190f35b6102c4610b1f565b6102c4610b4a565b6102c4610b54565b61029f610b63565b6102c4610b6d565b61029f610b7c565b6103aa6004803603604081101561042c57600080fd5b50803590602001356001600160a01b0316610b86565b6104696004803603602081101561045857600080fd5b503567ffffffffffffffff16610c26565b60408051918252519081900360200190f35b6104a26004803603602081101561049157600080fd5b503567ffffffffffffffff16610cdc565b604080516001600160a01b039094168452602084019290925261ffff1682820152519081900360600190f35b61029f610d04565b6104de610d14565b604080516001600160a01b0394851681529290931660208301528183015290519081900360600190f35b610469610d9e565b6103aa6004803603602081101561052657600080fd5b5035610e7b565b6103aa6004803603602081101561054357600080fd5b50351515610f05565b6102c46004803603602081101561056257600080fd5b5035610f79565b6103aa6004803603602081101561057f57600080fd5b5035610f8a565b6103aa6110a0565b6103aa600480360360208110156105a457600080fd5b50356001600160a01b031661113e565b6102c4611269565b610469600480360360208110156105d257600080fd5b503567ffffffffffffffff16611294565b6102c46112ab565b61029f6004803603602081101561060157600080fd5b503567ffffffffffffffff166112ba565b6103aa600480360361026081101561062957600080fd5b5067ffffffffffffffff813516906001600160a01b0360208201351690604081019060a081019061014081019061018081019061020081019061024001356112c5565b6104696004803603604081101561068257600080fd5b813591908101906040810160208201356401000000008111156106a457600080fd5b8201836020820111156106b657600080fd5b803590602001918460018302840111640100000000831117156106d857600080fd5b509092509050611433565b6103aa61174c565b6103aa6004803603602081101561070157600080fd5b50356001600160a01b03166117e8565b6103aa6004803603602081101561072757600080fd5b50356001600160a01b0316611910565b6102c4611a38565b6107666004803603602081101561075557600080fd5b503567ffffffffffffffff16611a42565b6040516001600160a01b03881681526020810187606080838360005b8381101561079a578181015183820152602001610782565b5050505090500186600560200280838360005b838110156107c55781810151838201526020016107ad565b5050505090500185600260200280838360005b838110156107f05781810151838201526020016107d8565b5050505090500184600460200280838360005b8381101561081b578181015183820152602001610803565b5050505090500183600260200280838360005b8381101561084657818101518382015260200161082e565b5050505090500182815260200197505050505050505060405180910390f35b6103aa6004803603602081101561087b57600080fd5b503567ffffffffffffffff16611a9b565b6104de600480360360208110156108a257600080fd5b50356001600160a01b0316611b36565b6108d9600480360360208110156108c857600080fd5b503567ffffffffffffffff16611bde565b6040805167ffffffffffffffff94851681529290931660208301528183015290519081900360600190f35b61029f611c18565b6000610916611c22565b90505b90565b60006109167f7cbb12e82a6d63ff16fe43977f43e3e2b247ecd4e62c0e340da8800a48c67346611c4e565b60005467ffffffffffffffff1690565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314610a2557604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109ea5781810151838201526020016109d2565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051808201909152601e81527f4354525f494e56414c49445f494d504c535f494e5055545f4c454e47544800006020820152838214610aab57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060005b83811015610af657610aee858583818110610ac657fe5b90506020020135848484818110610ad957fe5b905060200201356001600160a01b0316611c69565b600101610aaf565b5050505050565b6001600160a01b03811660009081526005602052604090205460ff165b919050565b60006109167f06aa03964db1f7257357ef09714a5f0ca3633723df419e97015e0c7a3e83edb7611c4e565b6000610916611d6d565b6006546001600160a01b031690565b6000610916611d98565b6008546001600160a01b031690565b6000610916611e76565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314610c1757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50610c228282611c69565b5050565b6000805460408051808201909152601781527f434c4b5f5445524d5f444f45535f4e4f545f45584953540000000000000000006020820152839167ffffffffffffffff6801000000000000000090910481169083161115610ccb57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50610cd583611ef1565b9392505050565b600080600080610cea611fd5565b9050610cf68582611ff1565b935093509350509193909250565b60025467ffffffffffffffff1690565b6000806000610d21612036565b92506000839050806001600160a01b0316637b751b9e6040518163ffffffff1660e01b8152600401604080518083038186803b158015610d6057600080fd5b505afa158015610d74573d6000803e3d6000fd5b505050506040513d6040811015610d8a57600080fd5b508051602090910151949590949350915050565b6000805468010000000000000000900467ffffffffffffffff168082526001602081905260408320908101548015610dda579250610919915050565b6000610de584611ef1565b60408051808201909152601f81527f434c4b5f5445524d5f52414e444f4d4e4553535f554e415641494c41424c4500602082015290915081610e6b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060019092018290555091505090565b336000610e86612036565b9050806001600160a01b031663c39c83d183856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610ee857600080fd5b505af1158015610efc573d6000803e3d6000fd5b50505050505050565b3360008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515908117909155825190815291517f189949428c2e58715ea2f0be0d702bc14e73743bdbb58814a595c19e1285c5be9281900390910190a250565b6000610f8482611c4e565b92915050565b6000610f94612036565b9050600080826001600160a01b031663bd881e53856040518263ffffffff1660e01b8152600401808281526020019150506040805180830381600087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d604081101561100857600080fd5b508051602090910151604080517f311a6c560000000000000000000000000000000000000000000000000000000081526004810188905260ff8316602482015290519294509092506001600160a01b0384169163311a6c569160448082019260009290919082900301818387803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b5050505050505050565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461113157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061113c6000612061565b565b60065460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146111cf57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b03821661125c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50611266816120d8565b50565b60006109167f3b21d36b36308c830e6c4053fb40a3b6d79dde78947fbf6b0accd30720ab5370611c4e565b60008061129f611fd5565b9050610cd5838261214f565b6007546001600160a01b031690565b6000610f8482612168565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461135657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000611361611d98565b9050611428818a8a8a6003806020026040519081016040528092919082600360200280828437600092019190915250506040805160a081810190925291508c9060059083908390808284376000920191909152505060408051808201825291508c9060029083908390808284376000920191909152505060408051608081810190925291508c9060049083908390808284376000920191909152505060408051808201825291508c9060029083908390808284376000920191909152508c91506123a59050565b505050505050505050565b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f88f3ee690000000000000000000000000000000000000000000000000000000060048201529051600091339182916301ffc9a7916024808301926020929190829003018186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d60208110156114d857600080fd5b505160408051808201909152601881527f41435f53454e4445525f4e4f545f41524249545241424c45000000000000000060208201529061155d57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000611568611d6d565b9050806001600160a01b031663fd8e3934836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156115c057600080fd5b505afa1580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b505160408051808201909152601881527f41435f535542534352495054494f4e5f4e4f545f50414944000000000000000060208201529061166f57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600061167a612036565b9050806001600160a01b0316631d2fa1fb846116958a612eef565b60405163ffffffff841660e01b81526001600160a01b0383166004820190815260ff83166024830152606060448301908152606483018c90528c928c929190608401848480828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051979650505050505050565b60065460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146117dd57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061113c60006120d8565b60085460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b0316331461187957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b03821661190657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061126681612061565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b031633146119a157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060408051808201909152601c81527f4354525f494e56414c49445f474f5645524e4f525f414444524553530000000060208201526001600160a01b038216611a2e57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5061126681612f80565b6000610916612036565b6000611a4c613823565b611a54613841565b611a5c61385f565b611a6461387d565b611a6c61385f565b600080611a77611fd5565b9050611a838982612ff7565b959f949e50929c50909a509850965090945092505050565b60075460408051808201909152601781527f4354525f53454e4445525f4e4f545f474f5645524e4f520000000000000000006020820152906001600160a01b03163314611b2c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50611266816132c7565b6000806000611b43611d6d565b92506000839050806001600160a01b0316630a771c25866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060606040518083038186803b158015611ba057600080fd5b505afa158015611bb4573d6000803e3d6000fd5b505050506040513d6060811015611bca57600080fd5b508051602090910151949690955092505050565b67ffffffffffffffff9081166000908152600160208190526040909120805491015481831693680100000000000000009092049092169190565b6000610916611fd5565b6000610916611c2f611e76565b60005468010000000000000000900467ffffffffffffffff16906134b1565b6000908152600960205260409020546001600160a01b031690565b611c7281613553565b6040518060400160405280601f81526020017f4354525f494d504c454d454e544154494f4e5f4e4f545f434f4e54524143540081525090611cf757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600082815260096020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03851690811790915582518581529182015281517f0669329f751b07de4aa82f60514a409d0dfaef266e791a4a65a95b07b1c4c324929181900390910190a15050565b60006109167f2bfa3327fe52344390da94c32a346eeb1b65a8b583e4335a419b9471e88c1365611c4e565b600080611da3611e76565b60408051808201909152601881527f434c4b5f544f4f5f4d414e595f5452414e534954494f4e5300000000000000006020820152909150600167ffffffffffffffff83161115611e3757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5067ffffffffffffffff8116611e6757505060005468010000000000000000900467ffffffffffffffff16610919565b611e7081612168565b91505090565b6000805467ffffffffffffffff6801000000000000000090910481168252600160205260408220541680611ea8613572565b67ffffffffffffffff161015611ec2576000915050610919565b60005467ffffffffffffffff1681611ed8613572565b0367ffffffffffffffff1681611eea57fe5b0491505090565b67ffffffffffffffff808216600090815260016020526040812080549192909168010000000000000000900416611f26613584565b67ffffffffffffffff16116040518060400160405280601b81526020017f434c4b5f5445524d5f52414e444f4d4e4553535f4e4f545f594554000000000081525090611fb657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b505468010000000000000000900467ffffffffffffffff164092915050565b60005468010000000000000000900467ffffffffffffffff1690565b6000806000806120018686613591565b805460028201546005909201546001600160a01b039091169891975068010000000000000000900461ffff1695509350505050565b60006109167f14a6c70f0f6d449c014c7bbc9e68e31e79e8474fb03b7194df83109a2d888ae6611c4e565b600854604080516001600160a01b039283168152918316602083015280517faf8bba87fb343f5755495c80323f32cd6bbfaebd666ff5abac709bc1f76f2f179281900390910190a16008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600654604080516001600160a01b039283168152918316602083015280517f2e8176039aca48fb2df80d8a3f0c25cf4f12ba7ba15aabe562bd39f71967954f9281900390910190a16006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008061215c8484613591565b600a0154949350505050565b600080612173611e76565b905060008167ffffffffffffffff168467ffffffffffffffff1610612198578161219a565b835b67ffffffffffffffff169050600081116040518060400160405280601c81526020017f434c4b5f494e56414c49445f5452414e534954494f4e5f5445524d53000000008152509061222f57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600061223a613584565b60005490915068010000000000000000900467ffffffffffffffff168060015b8481116123165767ffffffffffffffff80831660009081526001602081905260408083209590910192831682529020909290612295846135c4565b60005482546122b79167ffffffffffffffff918216911663ffffffff6134b116565b815467ffffffffffffffff191667ffffffffffffffff918216177fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff1668010000000000000000600189810193909316021790915591909101905061225a565b506000805467ffffffffffffffff8084166801000000000000000081027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff90931692909217909255604080519285168352602083019190915280517fb8818b6d0c27e4fc7cf75de16ac2543426d3c0bcc520931d24e5a7dde4adca119281900390910190a19695505050505050565b67ffffffffffffffff891615806123cf57508867ffffffffffffffff168867ffffffffffffffff16115b6040518060400160405280601181526020017f434f4e465f544f4f5f4f4c445f5445524d0000000000000000000000000000008152509061245457604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b508151158015906124685750602082015115155b6040518060400160405280601b81526020017f434f4e465f5a45524f5f434f4c4c41544552414c5f464143544f520000000000815250906124ed57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506124ff8460005b60200201516135cd565b6040518060400160405280601881526020017f434f4e465f494e56414c49445f50454e414c54595f50435400000000000000008152509061258457604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506125908460016124f5565b6040518060400160405280602081526020017f434f4e465f494e56414c49445f46494e414c5f524f554e445f5245445f5043548152509061261557604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50825160408051808201909152601e81527f434f4e465f4241445f494e495449414c5f4a55524f52535f4e554d424552000060208201529067ffffffffffffffff166126a557604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000836001602002015167ffffffffffffffff16116040518060400160405280601b81526020017f434f4e465f4241445f41505045414c5f535445505f464143544f5200000000008152509061274057604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50604083015167ffffffffffffffff16600081158015906127625750600a8211155b9050806040518060400160405280601e81526020017f434f4e465f494e56414c49445f4d41585f41505045414c5f524f554e44530000815250906127ea57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060005b60058110156128ca57600088826005811061280557fe5b602002015167ffffffffffffffff1611801561283c57506121de88826005811061282b57fe5b602002015167ffffffffffffffff16105b6040518060400160405280601f81526020017f434f4e465f4c415247455f524f554e445f50484153455f4455524154494f4e00815250906128c157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506001016127ee565b5060408051808201909152601c81527f434f4e465f5a45524f5f4d494e5f4143544956455f42414c414e43450000000060208201528361294e57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5060025467ffffffffffffffff808d16911611156129875760025467ffffffffffffffff1660009081526004602052604081205561299b565b6003805490612999906001830161389b565b505b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81019160009167ffffffffffffffff84169081106129da57fe5b90600052602060002090600b020190506040518060a001604052808c6001600160a01b0316815260200189600160028110612a1157fe5b602002015161ffff1681526020018b600060038110612a2c57fe5b602002015181526020018b600160038110612a4357fe5b602002015181526020018b600260038110612a5a57fe5b60209081029190910151909152815183549183015161ffff1674010000000000000000000000000000000000000000027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff6001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff199093169290921716178255604080820151600184015560608201516002840155608090910151600383015580516101808101909152808a6000602002015167ffffffffffffffff1681526020018a600160058110612b2657fe5b602002015167ffffffffffffffff1681526020018a600260058110612b4757fe5b602002015167ffffffffffffffff1681526020018a600360058110612b6857fe5b602002015167ffffffffffffffff1681526020018a600460058110612b8957fe5b602002015167ffffffffffffffff16815260200189600060028110612baa57fe5b602002015161ffff16815260200188600060048110612bc557fe5b602002015167ffffffffffffffff16815260200188600160048110612be657fe5b602002015167ffffffffffffffff16815260200188600360048110612c0757fe5b602002015167ffffffffffffffff16815260200185815260200187600060028110612c2e57fe5b6020020151815260200187600160028110612c4557fe5b60200201518152508160040160008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160000160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160010160086101000a81548161ffff021916908361ffff16021790555060c082015181600101600a6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060e08201518160010160126101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101008201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506101208201518160030155610140820151816004015561016082015181600501559050508481600a01819055508167ffffffffffffffff16600460008e67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020819055508b600260006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507ff991c74e88b00b8de409caf790045f133e9a8283d3b989db88e2b2d93612c3a78c83604051808367ffffffffffffffff1667ffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019250505060405180910390a150505050505050505050505050565b60408051808201909152601481527f55494e54385f4e554d4245525f544f4f5f424947000000000000000000000000602082015260009060ff831115612f7957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5090919050565b600754604080516001600160a01b039283168152918316602083015280517fad1fe49159fc13ce805cb23e72eb6724c008509c8095b9499752efea5747af3e9281900390910190a16007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000613001613823565b613009613841565b61301161385f565b61301961387d565b61302161385f565b60008061302e8a8a613591565b905060008160000190508060000160009054906101000a90046001600160a01b03169850604051806060016040528082600101548152602001826002015481526020018260030154815250975060008260040190506040518060a001604052808260000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260000160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250975060405180604001604052808260010160089054906101000a900461ffff1661ffff1661ffff1681526020018360000160149054906101000a900461ffff1661ffff1661ffff168152509650604051806080016040528082600101600a9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020018260010160129054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001826003015467ffffffffffffffff1667ffffffffffffffff1681526020018260020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525095506040518060400160405280826004015481526020018260050154815250945082600a0154935050505092959891949750929550565b6132cf611c22565b60408051808201909152601e81527f434c4b5f43414e4e4f545f44454c41595f535441525445445f434f555254000060208201529067ffffffffffffffff161561335d57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b506000808052600160205280547fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4980549092916133ad9167ffffffffffffffff908116911663ffffffff6134b116565b90508067ffffffffffffffff168367ffffffffffffffff16116040518060400160405280602081526020017f434c4b5f43414e4e4f545f44454c41595f504153545f53544152545f54494d458152509061344b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b50600054825467ffffffffffffffff191667ffffffffffffffff91821685038216178355604080518383168152918516602083015280517f9b735da8a0762c6e913df06587b4fa81f87b8075e2a2afdeae6afde9456fd8799281900390910190a1505050565b60408051808201909152601381527f4d41544836345f4144445f4f564552464c4f570000000000000000000000000060208201526000908383019067ffffffffffffffff808616908316101561354b57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b509392505050565b60006001600160a01b03821661356b57506000610b1a565b503b151590565b600061091661357f6135dc565b6135e0565b600061091661357f613671565b60008061359e8484613675565b9050600381815481106135ad57fe5b90600052602060002090600b020191505092915050565b6112668161370a565b61271061ffff82161115919050565b4290565b60408051808201909152601581527f55494e5436345f4e554d4245525f544f4f5f4249470000000000000000000000602082015260009067ffffffffffffffff831115612f7957604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b4390565b60008167ffffffffffffffff168367ffffffffffffffff16116136b2575067ffffffffffffffff8216600090815260046020526040902054610f84565b60025467ffffffffffffffff90811690841681116136ea5767ffffffffffffffff166000908152600460205260409020549050610f84565b505067ffffffffffffffff16600090815260046020526040902054919050565b67ffffffffffffffff811660009081526004602052604090205480610c2257600060048161374967ffffffffffffffff8616600163ffffffff61377d16565b67ffffffffffffffff9081168252602080830193909352604091820160009081205491871681526004909352912055505050565b60008267ffffffffffffffff168267ffffffffffffffff1611156040518060400160405280601481526020017f4d41544836345f5355425f554e444552464c4f570000000000000000000000008152509061381c57604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156109ea5781810151838201526020016109d2565b5050900390565b60405180606001604052806003906020820280388339509192915050565b6040518060a001604052806005906020820280388339509192915050565b60405180604001604052806002906020820280388339509192915050565b60405180608001604052806004906020820280388339509192915050565b8154818355818111156138c757600b0281600b0283600052602060002091820191016138c791906138cc565b505050565b61091991905b8082111561397d5780547fffffffffffffffffffff000000000000000000000000000000000000000000001681556000600182018190556002820181905560038201819055600482018190556005820180547fffffffffffff000000000000000000000000000000000000000000000000000016905560068201805467ffffffffffffffff19169055600782018190556008820181905560098201819055600a820155600b016138d2565b509056fea165627a7a72305820e2d4166bf76ae015859385844bc784a498d413720f4c4bc6967453590ecd4a410029",
  "sourceMap": "275:6842:2:-;;;3158:705;8:9:-1;5:2;;;30:1;27;20:12;5:2;3158:705:2;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;3158:705:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:20:3;3158:705:2;2736:20:3;2759:14;;;;;-1:-1:-1;2783:26:3;2812:11;2824:1;2812:14;;;;2783:43;;1356:8;-1:-1:-1;;;;;2845:33:3;:13;-1:-1:-1;;;;;2845:33:3;;2880:28;;;;;;;;;;;;;;;;;2837:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2837:72:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:13;2950:16;:14;;;:16;;:::i;:::-;:32;-1:-1:-1;;;;;2927:55:3;:19;-1:-1:-1;;;;;2927:55:3;;;2984:31;;;;;;;;;;;;;;;;;2919:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2919:97:3;;1356:8;1493:1;:21;3057:16;:14;;;:16;;:::i;:::-;:46;-1:-1:-1;;;;;3034:69:3;:19;-1:-1:-1;;;;;3034:69:3;;;3105:31;;;;;;;;;;;;;;;;;3026:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3026:111:3;-1:-1:-1;3148:12:3;:28;;-1:-1:-1;;;;;3148:28:3;;;-1:-1:-1;;;;;;3148:28:3;;;;;;3252:8;;;3148:28;3252:8;;;;;:56;;3273:35;;;;3252:56;;;;;;;;;;;3148:28;-1:-1:-1;4383:18:6;:7;3148:28:3;4383:18:6;:::i;:::-;;4411:239;4435:1;4450;4465:9;4488:5;4507:20;4541:5;4560:12;4586:23;4623:17;4411:10;;;:239;;:::i;:::-;4000:657;;;;;;;6268:32:11;6286:10;6297:1;6286:13;;;;;;;;;;;6268:17;;;:32;;:::i;:::-;6310:33;6329:10;6340:1;6329:13;;;;6310:18;;;:33;;:::i;:::-;6353:34;6373:10;6384:1;6373:13;;;;6353:19;;;:34;;:::i;:::-;5726:668;;;;;;;;;3158:705:2;;;;;;;;;275:6842;;1374:106:25;1423:6;1448:25;:14;:12;;;:14;;:::i;:::-;:23;;;;;:25;;:::i;:::-;1441:32;;1374:106;;:::o;11866:3671:6:-;-1:-1:-1;;;;;12462:12:6;;;;:37;;;12492:7;-1:-1:-1;;;;;12478:21:6;:11;-1:-1:-1;;;;;12478:21:6;;12462:37;12501:18;;;;;;;;;;;;;;;;;12454:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12454:66:6;-1:-1:-1;12608:26:6;;:30;;;;:64;;-1:-1:-1;12642:26:6;;;;:30;;12608:64;12674:28;;;;;;;;;;;;;;;;;12600:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12600:103:6;-1:-1:-1;12818:28:6;12837:5;12843:1;12837:8;;;;;12818:18;;;;;:28;;:::i;:::-;12848:25;;;;;;;;;;;;;;;;;12810:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12810:64:6;-1:-1:-1;12892:28:6;12911:5;12917:1;12911:8;;12892:28;12922:39;;;;;;;;;;;;;;;;;12884:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12884:78:6;-1:-1:-1;13057:15:6;;13078:31;;;;;;;;;;;;;13057:15;13078:31;;;;-1:-1:-1;;;;;13057:19:6;13049:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13049:61:6;-1:-1:-1;13203:1:6;13185:12;13198:1;13185:15;;;;-1:-1:-1;;;;;13185:19:6;;13206:28;;;;;;;;;;;;;;;;;13177:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13177:58:6;-1:-1:-1;13360:15:6;;;;-1:-1:-1;;;;;13326:49:6;:31;13415:27;;;;;:89;;;1428:2;13446:23;:58;;13415:89;13385:119;;13522:22;13546:31;;;;;;;;;;;;;;;;;13514:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13514:64:6;-1:-1:-1;13663:6:6;13658:202;13679:27;13675:1;:31;13658:202;;;13761:1;13735:20;13756:1;13735:23;;;;;;;;;;;-1:-1:-1;;;;;13735:27:6;;:79;;;;-1:-1:-1;1306:4:6;13766:20;13787:1;13766:23;;;;;;;;;;;-1:-1:-1;;;;;13766:48:6;;13735:79;13816:32;;;;;;;;;;;;;;;;;13727:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13727:122:6;-1:-1:-1;13708:3:6;;13658:202;;;-1:-1:-1;13953:29:6;;;;;;;;;;;;;;;;;13930:21;13922:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13922:61:6;-1:-1:-1;14161:18:6;;-1:-1:-1;;;;;14161:28:6;;;:18;;:28;14157:144;;;14220:18;;-1:-1:-1;;;;;14220:18:6;14242:1;14205:34;;;:14;:34;;;;;:38;14157:144;;;14274:7;:16;;;;;;;;;:::i;:::-;;14157:144;14341:7;:14;;-1:-1:-1;;14341:18:6;;;14311:20;;-1:-1:-1;;;;;14394:22:6;;;;;;;;;;;;;;;;;;;14370:46;;14441:192;;;;;;;;14473:9;-1:-1:-1;;;;;14441:192:6;;;;;14614:5;14620:1;14614:8;;;;;;;;;;;14441:192;;;;;;14506:5;14512:1;14506:8;;;;;;;;;;;14441:192;;;;14538:5;14544:1;14538:8;;;;;;;;;;;14441:192;;;;14571:5;14577:1;14571:8;;;;;;;;;;;;;;;;14441:192;;;14427:206;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14427:206:6;;;-1:-1:-1;;;;;;14427:206:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14662:665;;;;;;;;;14706:20;14427:11;14706:23;;;;-1:-1:-1;;;;;14662:665:6;;;;;14756:20;14777:1;14756:23;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;14806:20;14827:1;14806:23;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;14856:20;14877:1;14856:23;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;14913:20;14934:1;14913:23;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;14962:5;14968:1;14962:8;;;;;;;;;;;14662:665;;;;;;15008:12;15021:1;15008:15;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;15055:12;15068:1;15055:15;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;15166:12;15179:1;15166:15;;;;;;;;;;;-1:-1:-1;;;;;14662:665:6;;;;;15108:23;14662:665;;;;15219:23;15243:1;15219:26;;;;;;;;;;;14662:665;;;;15290:23;15314:1;15290:26;;;;;;;;;;;14662:665;;;14644:6;:15;;:683;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14644:683:6;;;;;-1:-1:-1;;;;;14644:683:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15364:17;15338:6;:23;;:43;;;;15422:13;-1:-1:-1;;;;;15392:43:6;:14;:27;15407:11;-1:-1:-1;;;;;15392:27:6;-1:-1:-1;;;;;15392:27:6;;;;;;;;;;;;:43;;;;15466:11;15445:18;;:32;;;;;-1:-1:-1;;;;;15445:32:6;;;;;-1:-1:-1;;;;;15445:32:6;;;;;;15493:37;15503:11;15516:13;15493:37;;;;-1:-1:-1;;;;;15493:37:6;-1:-1:-1;;;;;15493:37:6;;;;;;-1:-1:-1;;;;;15493:37:6;-1:-1:-1;;;;;15493:37:6;;;;;;;;;;;;;;;;11866:3671;;;;;;;;;;;;;:::o;18130:184:11:-;18229:8;:14;18208:55;;;-1:-1:-1;;;;;18229:14:11;;;18208:55;;;;;;;;;;;;;;;;;;;;;18273:8;:34;;-1:-1:-1;;;;;;18273:34:11;-1:-1:-1;;;;;18273:34:11;;;;;;;;;;18130:184::o;18483:191::-;18585:15;;18563:58;;;-1:-1:-1;;;;;18585:15:11;;;18563:58;;;;;;;;;;;;;;;;;;;;;18631:15;:36;;-1:-1:-1;;;;;;18631:36:11;-1:-1:-1;;;;;18631:36:11;;;;;;;;;;18483:191::o;18846:198::-;18951:16;;18928:61;;;-1:-1:-1;;;;;18951:16:11;;;18928:61;;;;;;;;;;;;;;;;;;;;;18999:16;:38;;-1:-1:-1;;;;;;18999:38:11;-1:-1:-1;;;;;18999:38:11;;;;;;;;;;18846:198::o;1039:144:25:-;1112:15;1039:144;:::o;645:156:26:-;740:27;;;;;;;;;;;;;;;;;697:6;;-1:-1:-1;;;;;723:15:26;;;715:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;715:53:26;-1:-1:-1;792:1:26;;645:156;-1:-1:-1;645:156:26:o;187:99:18:-;155:5;263:16;;;;;187:99;;;:::o;275:6842:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;275:6842:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:6842:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "275:6842:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;275:6842:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5799:99:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17397:95:11;;;:::i;:::-;;;;-1:-1:-1;;;;;17397:95:11;;;;;;;;;;;;;;5274:94:3;;;:::i;11913:308:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11913:308:11;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11913:308:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11913:308:11;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;11913:308:11;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11913:308:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11913:308:11;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;11913:308:11;;-1:-1:-1;11913:308:11;-1:-1:-1;11913:308:11;:::i;:::-;;8579:131:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8579:131:6;-1:-1:-1;;;;;8579:131:6;;:::i;:::-;;;;;;;;;;;;;;;;;;17185:99:11;;;:::i;17860:103::-;;;:::i;16024:98::-;;;:::i;3614:99:3:-;;;:::i;16458:102:11:-;;;:::i;6075:115:3:-;;;:::i;11612::11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11612:115:11;;;;;;-1:-1:-1;;;;;11612:115:11;;:::i;7136:150:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7136:150:3;;;;:::i;:::-;;;;;;;;;;;;;;;;15190:240:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15190:240:11;;;;:::i;:::-;;;;-1:-1:-1;;;;;15190:240:11;;;;;;;;;;;;;;;;;;;;;;;;;;;8891:106:6;;;:::i;6075:286:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;6075:286:2;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:637:3;;;:::i;5022:265:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5022:265:2;;:::i;4847:186:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4847:186:6;;;;:::i;16731:103:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16731:103:11;;:::i;5483:278:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5483:278:2;;:::i;11343:111:11:-;;;:::i;9740:220::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9740:220:11;-1:-1:-1;;;;;9740:220:11;;:::i;17621:112::-;;;:::i;15703:206::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15703:206:11;;;;:::i;16239:100::-;;;:::i;3982:138:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3982:138:3;;;;:::i;8558:704:11:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;8558:704:11;;;;;-1:-1:-1;;;;;8558:704:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4232:603:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4232:603:2;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4232:603:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4232:603:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4232:603:2;;-1:-1:-1;4232:603:2;-1:-1:-1;4232:603:2;:::i;10999:105:11:-;;;:::i;10516:232::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10516:232:11;-1:-1:-1;;;;;10516:232:11;;:::i;10127:226::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10127:226:11;-1:-1:-1;;;;;10127:226:11;;:::i;16963:105::-;;;:::i;14287:484::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14287:484:11;;;;:::i;:::-;;;-1:-1:-1;;;;;14287:484:11;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14287:484:11;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14287:484:11;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14287:484:11;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14287:484:11;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14287:484:11;;;;;;;;;;;;;;;;;;;;;;;;;;;9438:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9438:139:11;;;;:::i;6794:321:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6794:321:2;-1:-1:-1;;;;;6794:321:2;;:::i;6692:235:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6692:235:3;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5510:107;;;:::i;5799:99::-;5850:6;5875:16;:14;:16::i;:::-;5868:23;;5799:99;;:::o;17397:95:11:-;17441:7;17467:18;1106:66;17467:10;:18::i;5274:94:3:-;5324:6;5349:12;;;5274:94;:::o;11913:308:11:-;3164:16;;3182:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3164:16:11;3150:10;:30;3142:66;;;;-1:-1:-1;;;;;3142:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3142:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12070:32:11;;;;;;;;;;;;;;;;;12036;;;12028:75;;;;-1:-1:-1;;;;;12028:75:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12028:75:11;-1:-1:-1;12119:9:11;12114:101;12134:15;;;12114:101;;;12170:34;12181:4;;12186:1;12181:7;;;;;;;;;;;;;12190:10;;12201:1;12190:13;;;;;;;;;;;;;-1:-1:-1;;;;;12190:13:11;12170:10;:34::i;:::-;12151:3;;12114:101;;;;11913:308;;;;:::o;8579:131:6:-;-1:-1:-1;;;;;8676:27:6;;8653:4;8676:27;;;:18;:27;;;;;;;;8579:131;;;;:::o;17185:99:11:-;17231:7;17257:20;934:66;17257:10;:20::i;17860:103::-;17911:7;17937:19;:17;:19::i;16024:98::-;16101:8;:14;-1:-1:-1;;;;;16101:14:11;16024:98;:::o;3614:99:3:-;3661:6;3686:20;:18;:20::i;16458:102:11:-;16537:16;;-1:-1:-1;;;;;16537:16:11;16458:102;:::o;6075:115:3:-;6134:6;6159:24;:22;:24::i;11612:115:11:-;3164:16;;3182:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3164:16:11;3150:10;:30;3142:66;;;;-1:-1:-1;;;;;3142:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3142:66:11;;11698:22;11709:3;11714:5;11698:10;:22::i;:::-;11612:115;;:::o;7136:150:3:-;7222:7;2351:6;;2359:25;;;;;;;;;;;;;;;;;7204:7;;2351:6;;;;;;;2340:17;;;;;2332:53;;;;-1:-1:-1;;;;;2332:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2332:53:3;;7248:31;7271:7;7248:22;:31::i;:::-;7241:38;7136:150;-1:-1:-1;;;7136:150:3:o;15190:240:11:-;15253:14;15269:16;15287:17;15316:24;15343:20;:18;:20::i;:::-;15316:47;;15380:43;15396:7;15405:17;15380:15;:43::i;:::-;15373:50;;;;;;;15190:240;;;;;:::o;8891:106:6:-;8972:18;;;;8891:106;:::o;6075:286:2:-;6124:17;6143:14;6159:17;6200:20;:18;:20::i;:::-;6188:32;;6230:30;6279:9;6230:59;;6323:14;-1:-1:-1;;;;;6323:29:2;;:31;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6323:31:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6323:31:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6323:31:2;;;;;;;6075:286;;6323:31;;;-1:-1:-1;6075:286:2;-1:-1:-1;;6075:286:2:o;4517:637:3:-;4574:7;4693:6;;;;;;;4729:20;;;:5;:20;;;;;;;4784:15;;;;4813:28;;4809:80;;4864:14;-1:-1:-1;4857:21:3;;-1:-1:-1;;4857:21:3;4809:80;4934:21;4958:37;4981:13;4958:22;:37::i;:::-;5042:33;;;;;;;;;;;;;;;;;4934:61;;-1:-1:-1;5013:27:3;5005:71;;;;-1:-1:-1;;;;;5005:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;5005:71:3;-1:-1:-1;5086:15:3;;;;:31;;;-1:-1:-1;5104:13:3;-1:-1:-1;;4517:637:3;:::o;5022:265:2:-;5124:10;5090:19;5194:20;:18;:20::i;:::-;5145:70;;5225:14;-1:-1:-1;;;;;5225:34:2;;5260:7;5269:10;5225:55;;;;;;;;;;;;;-1:-1:-1;;;;;5225:55:2;-1:-1:-1;;;;;5225:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5225:55:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5225:55:2;;;;5022:265;;;:::o;4847:186:6:-;4933:10;4914:30;;;;:18;:30;;;;;;;;;:41;;;;;;;;;;;;;4970:56;;;;;;;;;;;;;;;;;4847:186;:::o;16731:103:11:-;16786:7;16812:15;16823:3;16812:10;:15::i;:::-;16805:22;16731:103;-1:-1:-1;;16731:103:11:o;5483:278:2:-;5545:30;5594:20;:18;:20::i;:::-;5545:70;;5626:19;5647:12;5663:14;-1:-1:-1;;;;;5663:28:2;;5692:10;5663:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5663:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5663:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5663:40:2;;;;;;;;5713:41;;;;;;;;;;;5738:15;;;5713:41;;;;;;5663:40;;-1:-1:-1;5663:40:2;;-1:-1:-1;;;;;;5713:12:2;;;;;:41;;;;;-1:-1:-1;;5713:41:2;;;;;;;;-1:-1:-1;5713:12:2;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;5713:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5713:41:2;;;;5483:278;;;;:::o;11343:111:11:-;3164:16;;3182:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3164:16:11;3150:10;:30;3142:66;;;;-1:-1:-1;;;;;3142:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3142:66:11;;11414:33;622:1;11414:19;:33::i;:::-;11343:111::o;9740:220::-;2766:8;:14;2782:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2766:14:11;2752:10;:28;2744:64;;;;-1:-1:-1;;;;;2744:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2744:64:11;-1:-1:-1;9876:30:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9841:33:11;;9833:74;;;;-1:-1:-1;;;;;9833:74:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9833:74:11;;9917:36;9935:17;9917;:36::i;:::-;9740:220;:::o;17621:112::-;17673:7;17699:27;1304:66;17699:10;:27::i;15703:206::-;15771:7;15790:24;15817:20;:18;:20::i;:::-;15790:47;;15854:48;15875:7;15884:17;15854:20;:48::i;16239:100::-;16317:15;;-1:-1:-1;;;;;16317:15:11;16239:100;:::o;3982:138:3:-;4052:6;4077:36;4088:24;4077:10;:36::i;8558:704:11:-;2964:15;;2981:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2964:15:11;2950:10;:29;2942:65;;;;-1:-1:-1;;;;;2942:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2942:65:11;;8941:20;8964;:18;:20::i;:::-;8941:43;;8994:261;9018:13;9045:11;9070:9;9093:5;8994:261;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;8994:261:11;;;;;;;;;;;-1:-1:-1;9112:20:11;;8994:261;;;;9112:20;;8994:261;9112:20;8994:261;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8994:261:11;;;;;;;;;-1:-1:-1;9146:5:11;;8994:261;;;;9146:5;;8994:261;9146:5;8994:261;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8994:261:11;;;;;;;;;;;-1:-1:-1;9165:12:11;;8994:261;;;;9165:12;;8994:261;9165:12;8994:261;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8994:261:11;;;;;;;;;-1:-1:-1;9191:23:11;;8994:261;;;;9191:23;;8994:261;9191:23;8994:261;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;9228:17:11;;-1:-1:-1;8994:10:11;;-1:-1:-1;8994:261:11:i;:::-;3017:1;8558:704;;;;;;;;:::o;4232:603:2:-;4407:50;;;;;;639:18;4407:50;;;;;;4325:7;;4378:10;;;;4407:25;;:50;;;;;;;;;;;;;;4378:10;4407:50;;;5:2:-1;;;;30:1;27;20:12;5:2;4407:50:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4407:50:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4407:50:2;4459:27;;;;;;;;;;;;;4407:50;4459:27;;;;4399:88;;;;-1:-1:-1;;;;;4399:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4399:88:2;;4498:28;4544:19;:17;:19::i;:::-;4498:66;;4582:13;-1:-1:-1;;;;;4582:24:2;;4615:7;4582:42;;;;;;;;;;;;;-1:-1:-1;;;;;4582:42:2;-1:-1:-1;;;;;4582:42:2;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4582:42:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4582:42:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4582:42:2;4626:27;;;;;;;;;;;;;4582:42;4626:27;;;;4574:80;;;;-1:-1:-1;;;;;4574:80:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4574:80:2;;4665:30;4714:20;:18;:20::i;:::-;4665:70;;4752:14;-1:-1:-1;;;;;4752:28:2;;4781:7;4790:26;:16;:24;:26::i;:::-;4752:76;;;;;;;;;-1:-1:-1;;;;;4752:76:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4818:9;;;;4752:76;;;;4818:9;;;;4752:76;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4752:76:2;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4752:76:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4752:76:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4752:76:2;;4232:603;-1:-1:-1;;;;;;;4232:603:2:o;10999:105:11:-;2766:8;:14;2782:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2766:14:11;2752:10;:28;2744:64;;;;-1:-1:-1;;;;;2744:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2744:64:11;;11066:31;622:1;11066:17;:31::i;10516:232::-;3164:16;;3182:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3164:16:11;3150:10;:30;3142:66;;;;-1:-1:-1;;;;;3142:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3142:66:11;-1:-1:-1;10660:30:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10623:35:11;;10615:76;;;;-1:-1:-1;;;;;10615:76:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;10615:76:11;;10701:40;10721:19;10701;:40::i;10127:226::-;2964:15;;2981:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2964:15:11;2950:10;:29;2942:65;;;;-1:-1:-1;;;;;2942:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2942:65:11;-1:-1:-1;10267:30:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10231:34:11;;10223:75;;;;-1:-1:-1;;;;;10223:75:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;10223:75:11;;10308:38;10327:18;10308;:38::i;16963:105::-;17015:7;17041:20;:18;:20::i;14287:484::-;14366:14;14394:22;;:::i;:::-;14430:36;;:::i;:::-;14480:21;;:::i;:::-;14515:28;;:::i;:::-;14557:40;;:::i;:::-;14611:24;14660;14687:20;:18;:20::i;:::-;14660:47;;14724:40;14737:7;14746:17;14724:12;:40::i;:::-;14717:47;;;;-1:-1:-1;14717:47:11;;-1:-1:-1;14717:47:11;;-1:-1:-1;14717:47:11;-1:-1:-1;14717:47:11;-1:-1:-1;14717:47:11;;-1:-1:-1;14287:484:11;-1:-1:-1;;;14287:484:11:o;9438:139::-;2964:15;;2981:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2964:15:11;2950:10;:29;2942:65;;;;-1:-1:-1;;;;;2942:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2942:65:11;;9531:39;9547:22;9531:15;:39::i;6794:321:2:-;6867:17;6886:14;6902:17;6943:19;:17;:19::i;:::-;6931:31;;6972:28;7018:9;6972:56;;7063:13;-1:-1:-1;;;;;7063:32:2;;7096:11;7063:45;;;;;;;;;;;;;-1:-1:-1;;;;;7063:45:2;-1:-1:-1;;;;;7063:45:2;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7063:45:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7063:45:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7063:45:2;;;;;;;6794:321;;7063:45;;-1:-1:-1;6794:321:2;-1:-1:-1;;;6794:321:2:o;6692:235:3:-;6837:14;;;;6748:16;6837:14;;;:5;:14;;;;;;;;6869;;6904:15;;;6869:14;;;;6885:17;;;;;;;;6904:15;6692:235::o;5510:107::-;5565:6;5590:20;:18;:20::i;12063:117::-;12112:6;12137:36;12148:24;:22;:24::i;:::-;12137:6;;;;;;;;:10;:36::i;20404:101:11:-;20460:7;20486:12;;;:7;:12;;;;;;-1:-1:-1;;;;;20486:12:11;;20404:101::o;19205:201::-;19280:17;19291:5;19280:10;:17::i;:::-;19299:33;;;;;;;;;;;;;;;;;19272:61;;;;;-1:-1:-1;;;;;19272:61:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;19272:61:11;-1:-1:-1;19343:12:11;;;;:7;:12;;;;;;;;;:20;;-1:-1:-1;;19343:20:11;-1:-1:-1;;;;;19343:20:11;;;;;;;;19378:21;;;;;;;;;;;;;;;;;;;;;;19205:201;;:::o;20102:110::-;20154:7;20180:25;1497:66;20180:10;:25::i;7643:630:3:-;7691:6;7831:26;7860:24;:22;:24::i;:::-;7960:26;;;;;;;;;;;;;;;;;7831:53;;-1:-1:-1;1251:1:3;7902:56;;;;;7894:93;;;;-1:-1:-1;;;;;7894:93:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7894:93:3;-1:-1:-1;8082:28:3;;;8078:77;;-1:-1:-1;;8138:6:3;;;;;;;8131:13;;8078:77;8235:31;8246:19;8235:10;:31::i;:::-;8228:38;;;7643:630;:::o;12378:583::-;12435:6;12664;;;;;;;;;12658:13;;:5;:13;;;;;:23;;;12695:16;:14;:16::i;:::-;:39;;;12691:86;;;12764:1;12750:16;;;;;12691:86;12942:12;;;;12918:20;12899:16;:14;:16::i;:::-;:39;12898:56;;;;;;;;12891:63;;;12378:583;:::o;13539:264::-;13649:14;;;;13610:7;13649:14;;;:5;:14;;;;;13702:17;;13610:7;;13649:14;;13702:17;;;;13681:18;:16;:18::i;:::-;:38;;;13721:29;;;;;;;;;;;;;;;;;13673:78;;;;;-1:-1:-1;;;;;13673:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13673:78:3;-1:-1:-1;13778:17:3;;;;;;13768:28;;13539:264;-1:-1:-1;;13539:264:3:o;11769:91::-;11822:6;11847;;;;;;;11769:91::o;19737:326:6:-;19837:14;19853:16;19871:17;19904:21;19928:42;19942:7;19951:18;19928:13;:42::i;:::-;19988:17;;20007:20;;;;20029:26;;;;;-1:-1:-1;;;;;19988:17:6;;;;20007:20;;-1:-1:-1;20029:26:6;;;;;;-1:-1:-1;19737:326:6;-1:-1:-1;;;;19737:326:6:o;19841:113:11:-;19894:7;19920:27;756:66;19920:10;:27::i;18846:198::-;18951:16;;18928:61;;;-1:-1:-1;;;;;18951:16:11;;;18928:61;;;;;;;;;;;;;;;;;;;;;18999:16;:38;;-1:-1:-1;;18999:38:11;-1:-1:-1;;;;;18999:38:11;;;;;;;;;;18846:198::o;18130:184::-;18229:8;:14;18208:55;;;-1:-1:-1;;;;;18229:14:11;;;18208:55;;;;;;;;;;;;;;;;;;;;;18273:8;:34;;-1:-1:-1;;18273:34:11;-1:-1:-1;;;;;18273:34:11;;;;;;;;;;18130:184::o;20441:228:6:-;20537:7;20556:21;20580:42;20594:7;20603:18;20580:13;:42::i;:::-;20639:23;;;;20441:228;-1:-1:-1;;;;20441:228:6:o;8581:1870:3:-;8652:6;8780:24;8807;:22;:24::i;:::-;8780:51;;8841:19;8898:17;8871:44;;:24;:44;;;:91;;8945:17;8871:91;;;8918:24;8871:91;8863:100;;8841:122;;8995:1;8981:11;:15;8998:30;;;;;;;;;;;;;;;;;8973:56;;;;;-1:-1:-1;;;;;8973:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;8973:56:3;;9040:18;9061;:16;:18::i;:::-;9089:21;9113:6;9040:39;;-1:-1:-1;9113:6:3;;;;;;9202:1;9176:1151;9219:11;9205:10;:25;9176:1151;;9623:22;;;;9595:25;9623:22;;;:5;:22;;;;;;;;9629:15;;;;9686:20;;;;;;;9629:15;;9623:22;9720:34;9629:15;9720:19;:34::i;:::-;9999:12;;9972:22;;:40;;9999:12;9972:22;;;;9999:12;9972:40;:26;:40;:::i;:::-;9948:64;;-1:-1:-1;;9948:64:3;;;;;;10274:42;;;9948:64;10301:15;;;10274:42;;;;;;;;;9232:12;;;;;-1:-1:-1;9176:1151:3;;;-1:-1:-1;10337:6:3;:22;;;;;;;;;;;;;;;;;;;;10374:40;;;;;;;;;;;;;;;;;;;;;;;;;;;10431:13;8581:1870;-1:-1:-1;;;;;;8581:1870:3:o;11866:3671:6:-;12462:12;;;;;:37;;;12492:7;12478:21;;:11;:21;;;12462:37;12501:18;;;;;;;;;;;;;;;;;12454:66;;;;;-1:-1:-1;;;;;12454:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12454:66:6;-1:-1:-1;12608:26:6;;:30;;;;:64;;-1:-1:-1;12642:26:6;;;;:30;;12608:64;12674:28;;;;;;;;;;;;;;;;;12600:103;;;;;-1:-1:-1;;;;;12600:103:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12600:103:6;-1:-1:-1;12818:28:6;12837:5;12843:1;12837:8;;;;;12818:18;:28::i;:::-;12848:25;;;;;;;;;;;;;;;;;12810:64;;;;;-1:-1:-1;;;;;12810:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12810:64:6;-1:-1:-1;12892:28:6;12911:5;12917:1;12911:8;;12892:28;12922:39;;;;;;;;;;;;;;;;;12884:78;;;;;-1:-1:-1;;;;;12884:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12884:78:6;-1:-1:-1;13057:15:6;;13078:31;;;;;;;;;;;;;13057:15;13078:31;;;;13057:19;;13049:61;;;;-1:-1:-1;;;;;13049:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13049:61:6;-1:-1:-1;13203:1:6;13185:12;13198:1;13185:15;;;;:19;;;13206:28;;;;;;;;;;;;;;;;;13177:58;;;;;-1:-1:-1;;;;;13177:58:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13177:58:6;-1:-1:-1;13360:15:6;;;;13326:49;;:31;13415:27;;;;;:89;;;1428:2;13446:23;:58;;13415:89;13385:119;;13522:22;13546:31;;;;;;;;;;;;;;;;;13514:64;;;;;-1:-1:-1;;;;;13514:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13514:64:6;-1:-1:-1;13663:6:6;13658:202;13679:27;13675:1;:31;13658:202;;;13761:1;13735:20;13756:1;13735:23;;;;;;;;;;;:27;;;:79;;;;-1:-1:-1;1306:4:6;13766:20;13787:1;13766:23;;;;;;;;;;;:48;;;13735:79;13816:32;;;;;;;;;;;;;;;;;13727:122;;;;;-1:-1:-1;;;;;13727:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13727:122:6;-1:-1:-1;13708:3:6;;13658:202;;;-1:-1:-1;13953:29:6;;;;;;;;;;;;;;;;;13930:21;13922:61;;;;-1:-1:-1;;;;;13922:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13922:61:6;-1:-1:-1;14161:18:6;;:28;;;;:18;;:28;14157:144;;;14220:18;;;;14242:1;14205:34;;;:14;:34;;;;;:38;14157:144;;;14274:7;:16;;;;;;;;;:::i;:::-;;14157:144;14341:7;:14;;:18;;;;14311:20;;14394:22;;;;;;;;;;;;;;;;;;;;14370:46;;14441:192;;;;;;;;14473:9;-1:-1:-1;;;;;14441:192:6;;;;;14614:5;14620:1;14614:8;;;;;;;;;;;14441:192;;;;;;14506:5;14512:1;14506:8;;;;;;;;;;;14441:192;;;;14538:5;14544:1;14538:8;;;;;;;;;;;14441:192;;;;14571:5;14577:1;14571:8;;;;;;;;;;;;;;;;14441:192;;;14427:206;;;;;;;;;;;;;-1:-1:-1;;;;;14427:206:6;;;-1:-1:-1;;14427:206:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14662:665;;;;;;;;;14706:20;14427:11;14706:23;;;;14662:665;;;;;;14756:20;14777:1;14756:23;;;;;;;;;;;14662:665;;;;;;14806:20;14827:1;14806:23;;;;;;;;;;;14662:665;;;;;;14856:20;14877:1;14856:23;;;;;;;;;;;14662:665;;;;;;14913:20;14934:1;14913:23;;;;;;;;;;;14662:665;;;;;;14962:5;14968:1;14962:8;;;;;;;;;;;14662:665;;;;;;15008:12;15021:1;15008:15;;;;;;;;;;;14662:665;;;;;;15055:12;15068:1;15055:15;;;;;;;;;;;14662:665;;;;;;15166:12;15179:1;15166:15;;;;;;;;;;;14662:665;;;;;;15108:23;14662:665;;;;15219:23;15243:1;15219:26;;;;;;;;;;;14662:665;;;;15290:23;15314:1;15290:26;;;;;;;;;;;14662:665;;;14644:6;:15;;:683;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15364:17;15338:6;:23;;:43;;;;15422:13;15392:43;;:14;:27;15407:11;15392:27;;;;;;;;;;;;;;;:43;;;;15466:11;15445:18;;:32;;;;;;;;;;;;;;;;;;15493:37;15503:11;15516:13;15493:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11866:3671;;;;;;;;;;;;;:::o;488:151:26:-;580:26;;;;;;;;;;;;;;;;;539:5;;569:9;564:14;;;556:51;;;;-1:-1:-1;;;;;556:51:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;556:51:26;-1:-1:-1;630:1:26;;488:151;-1:-1:-1;488:151:26:o;18483:191:11:-;18585:15;;18563:58;;;-1:-1:-1;;;;;18585:15:11;;;18563:58;;;;;;;;;;;;;;;;;;;;;18631:15;:36;;-1:-1:-1;;18631:36:11;-1:-1:-1;;;;;18631:36:11;;;;;;;;;;18483:191::o;17775:1451:6:-;17884:14;17912:22;;:::i;:::-;17948:36;;:::i;:::-;17998:21;;:::i;:::-;18033:28;;:::i;:::-;18075:40;;:::i;:::-;18129:24;18178:21;18202:42;18216:7;18225:18;18202:13;:42::i;:::-;18178:66;;18255:29;18287:6;:11;;18255:43;;18319:10;:16;;;;;;;;;;-1:-1:-1;;;;;18319:16:6;18308:27;;18345:71;;;;;;;;18353:10;:19;;;18345:71;;;;18374:10;:19;;;18345:71;;;;18395:10;:20;;;18345:71;;;;;18427:37;18467:6;:15;;18427:55;;18492:241;;;;;;;;18528:14;:28;;;;;;;;;;;;18492:241;;;;;;;;18570:14;:26;;;;;;;;;;;;18492:241;;;;;;;;18610:14;:26;;;;;;;;;;;;18492:241;;;;;;;;18650:14;:26;;;;;;;;;;;;18492:241;;;;;;;;18690:14;:33;;;;;;;;;;;;18492:241;;;;;;;;;18743:66;;;;;;;;18751:14;:25;;;;;;;;;;;;18743:66;;;;;;;;18778:10;:30;;;;;;;;;;;;18743:66;;;;;;;;;18819:227;;;;;;;;18847:14;:37;;;;;;;;;;;;18819:227;;;;;;;;18898:14;:31;;;;;;;;;;;;18819:227;;;;;;;;18950:14;:37;;;18819:227;;;;;;;;19002:14;:34;;;;;;;;;;;;18819:227;;;;;;;;;19056:110;;;;;;;;19082:14;:37;;;19056:110;;;;19121:14;:44;;;19056:110;;;;;19196:6;:23;;;19177:42;;17775:1451;;;;;;;;;;;;;:::o;10652:650:3:-;10735:16;:14;:16::i;:::-;10758:32;;;;;;;;;;;;;;;;;;10735:21;;;10727:64;;;;-1:-1:-1;;;;;10727:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;10727:64:3;-1:-1:-1;10802:17:3;10822:8;;;:5;:8;;10894:12;;10822:8;10875:14;;10822:8;;10802:17;10875:32;;10822:8;10875:14;;;;10894:12;10875:32;:18;:32;:::i;:::-;10840:67;;10950:25;10925:50;;:22;:50;;;10977:34;;;;;;;;;;;;;;;;;10917:95;;;;;-1:-1:-1;;;;;10917:95:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;10917:95:3;-1:-1:-1;11201:12:3;;11159:54;;-1:-1:-1;;11159:54:3;11201:12;;;;11176:37;;11159:54;;;;;11228:67;;;;;;;;;;;;;;;;;;;;;;;;;;;10652:650;;;:::o;1694:166:24:-;1815:18;;;;;;;;;;;;;;;;;1752:6;;1781:7;;;;1806;;;;;;;;;1798:36;;;;-1:-1:-1;;;;;1798:36:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1798:36:24;-1:-1:-1;1852:1:24;1694:166;-1:-1:-1;;;1694:166:24:o;538:244:20:-;598:4;-1:-1:-1;;;;;618:21:20;;614:64;;-1:-1:-1;662:5:20;655:12;;614:64;-1:-1:-1;729:20:20;767:8;;;538:244::o;1374:106:25:-;1423:6;1448:25;:14;:12;:14::i;:::-;:23;:25::i;759:110::-;810:6;835:27;:16;:14;:16::i;20995:207:6:-;21084:14;21110:10;21123:44;21139:7;21148:18;21123:15;:44::i;:::-;21110:57;;21184:7;21192:2;21184:11;;;;;;;;;;;;;;;;;;21177:18;;;20995:207;;;;:::o;19594:97:11:-;19658:26;19676:7;19658:17;:26::i;187:99:18:-;155:5;263:16;;;;;187:99;;;:::o;1039:144:25:-;1112:15;1039:144;:::o;645:156:26:-;740:27;;;;;;;;;;;;;;;;;697:6;;728:10;723:15;;;715:53;;;;-1:-1:-1;;;;;715:53:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;460:94:25;535:12;460:94;:::o;21542:757:6:-;21633:7;21784:18;21773:29;;:7;:29;;;21769:90;;-1:-1:-1;21825:23:6;;;;;;;:14;:23;;;;;;21818:30;;21769:90;22020:18;;;;;;;22052:32;;;;22048:107;;22107:37;;;;;;:14;:37;;;;;;;-1:-1:-1;22100:44:6;;22048:107;-1:-1:-1;;22258:34:6;;;;;;:14;:34;;;;;;;21542:757;-1:-1:-1;21542:757:6:o;9225:387::-;9409:23;;;9383;9409;;;:14;:23;;;;;;9446:20;9442:164;;9482:24;9509:14;9482:24;9524:14;:11;;;9536:1;9524:14;:11;:14;:::i;:::-;9509:30;;;;;;;;;;;;;;;;;;-1:-1:-1;9509:30:6;;;;9553:23;;;;;:14;:23;;;;;:42;-1:-1:-1;9225:387:6;;:::o;1455:168:24:-;1513:6;1545:2;1539:8;;:2;:8;;;;1549:19;;;;;;;;;;;;;;;;;1531:38;;;;;-1:-1:-1;;;;;1531:38:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1531:38:24;-1:-1:-1;;1590:7:24;;;1455:168::o;275:6842:2:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;275:6842:2;;;-1:-1:-1;;275:6842:2:o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;275:6842:2;;;-1:-1:-1;;275:6842:2:o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;275:6842:2;;;-1:-1:-1;;275:6842:2:o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;275:6842:2;;;-1:-1:-1;;275:6842:2:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;275:6842:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.8;\n\nimport \"../lib/os/Uint256Helpers.sol\";\n\nimport \"./controller/Controller.sol\";\nimport \"../arbitration/IArbitrator.sol\";\nimport \"../arbitration/IArbitrable.sol\";\nimport \"../disputes/IDisputeManager.sol\";\nimport \"../subscriptions/ISubscriptions.sol\";\n\n\ncontract AragonCourt is Controller, IArbitrator {\n    using Uint256Helpers for uint256;\n\n    string private constant ERROR_SUBSCRIPTION_NOT_PAID = \"AC_SUBSCRIPTION_NOT_PAID\";\n    string private constant ERROR_SENDER_NOT_ARBITRABLE = \"AC_SENDER_NOT_ARBITRABLE\";\n\n    // Arbitrable interface ID based on ERC-165\n    bytes4 private constant ARBITRABLE_INTERFACE_ID = bytes4(0x88f3ee69);\n\n    /**\n    * @dev Constructor function\n    * @param _termParams Array containing:\n    *        0. _termDuration Duration in seconds per term\n    *        1. _firstTermStartTime Timestamp in seconds when the court will open (to give time for juror on-boarding)\n    * @param _governors Array containing:\n    *        0. _fundsGovernor Address of the funds governor\n    *        1. _configGovernor Address of the config governor\n    *        2. _modulesGovernor Address of the modules governor\n    * @param _feeToken Address of the token contract that is used to pay for fees\n    * @param _fees Array containing:\n    *        0. jurorFee Amount of fee tokens that is paid per juror per dispute\n    *        1. draftFee Amount of fee tokens per juror to cover the drafting cost\n    *        2. settleFee Amount of fee tokens per juror to cover round settlement cost\n    * @param _roundStateDurations Array containing the durations in terms of the different phases of a dispute:\n    *        0. evidenceTerms Max submitting evidence period duration in terms\n    *        1. commitTerms Commit period duration in terms\n    *        2. revealTerms Reveal period duration in terms\n    *        3. appealTerms Appeal period duration in terms\n    *        4. appealConfirmationTerms Appeal confirmation period duration in terms\n    * @param _pcts Array containing:\n    *        0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (‱ - 1/10,000)\n    *        1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)\n    * @param _roundParams Array containing params for rounds:\n    *        0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes\n    *        1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute\n    *        2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered\n    *        3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)\n    * @param _appealCollateralParams Array containing params for appeal collateral:\n    *        1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling\n    *        2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal\n    * @param _minActiveBalance Minimum amount of juror tokens that can be activated\n    */\n    constructor(\n        uint64[2] memory _termParams,\n        address[3] memory _governors,\n        ERC20 _feeToken,\n        uint256[3] memory _fees,\n        uint64[5] memory _roundStateDurations,\n        uint16[2] memory _pcts,\n        uint64[4] memory _roundParams,\n        uint256[2] memory _appealCollateralParams,\n        uint256 _minActiveBalance\n    )\n        public\n        Controller(\n            _termParams,\n            _governors,\n            _feeToken,\n            _fees,\n            _roundStateDurations,\n            _pcts,\n            _roundParams,\n            _appealCollateralParams,\n            _minActiveBalance\n        )\n    {\n        // solium-disable-previous-line no-empty-blocks\n    }\n\n    /**\n    * @notice Create a dispute with `_possibleRulings` possible rulings\n    * @param _possibleRulings Number of possible rulings allowed for the drafted jurors to vote on the dispute\n    * @param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n    * @return Dispute identification number\n    */\n    function createDispute(uint256 _possibleRulings, bytes calldata _metadata) external returns (uint256) {\n        IArbitrable subject = IArbitrable(msg.sender);\n        require(subject.supportsInterface(ARBITRABLE_INTERFACE_ID), ERROR_SENDER_NOT_ARBITRABLE);\n\n        ISubscriptions subscriptions = ISubscriptions(_getSubscriptions());\n        require(subscriptions.isUpToDate(address(subject)), ERROR_SUBSCRIPTION_NOT_PAID);\n\n        IDisputeManager disputeManager = IDisputeManager(_getDisputeManager());\n        return disputeManager.createDispute(subject, _possibleRulings.toUint8(), _metadata);\n    }\n\n    /**\n    * @notice Close the evidence period of dispute #`_disputeId`\n    * @param _disputeId Identification number of the dispute to close its evidence submitting period\n    */\n    function closeEvidencePeriod(uint256 _disputeId) external {\n        IArbitrable subject = IArbitrable(msg.sender);\n        IDisputeManager disputeManager = IDisputeManager(_getDisputeManager());\n        disputeManager.closeEvidencePeriod(subject, _disputeId);\n    }\n\n    /**\n    * @notice Execute the Arbitrable associated to dispute #`_disputeId` based on its final ruling\n    * @param _disputeId Identification number of the dispute to be executed\n    */\n    function executeRuling(uint256 _disputeId) external {\n        IDisputeManager disputeManager = IDisputeManager(_getDisputeManager());\n        (IArbitrable subject, uint8 ruling) = disputeManager.computeRuling(_disputeId);\n        subject.rule(_disputeId, uint256(ruling));\n    }\n\n    /**\n    * @dev Tell the dispute fees information to create a dispute\n    * @return recipient Address where the corresponding dispute fees must be transferred to\n    * @return feeToken ERC20 token used for the fees\n    * @return feeAmount Total amount of fees that must be allowed to the recipient\n    */\n    function getDisputeFees() external view returns (address recipient, ERC20 feeToken, uint256 feeAmount) {\n        recipient = _getDisputeManager();\n        IDisputeManager disputeManager = IDisputeManager(recipient);\n        (feeToken, feeAmount) = disputeManager.getDisputeFees();\n    }\n\n    /**\n    * @dev Tell the subscription fees information for a subscriber to be up-to-date\n    * @param _subscriber Address of the account paying the subscription fees for\n    * @return recipient Address where the corresponding subscriptions fees must be transferred to\n    * @return feeToken ERC20 token used for the subscription fees\n    * @return feeAmount Total amount of fees that must be allowed to the recipient\n    */\n    function getSubscriptionFees(address _subscriber) external view returns (address recipient, ERC20 feeToken, uint256 feeAmount) {\n        recipient = _getSubscriptions();\n        ISubscriptions subscriptions = ISubscriptions(recipient);\n        (feeToken, feeAmount,) = subscriptions.getOwedFeesDetails(_subscriber);\n    }\n}\n",
  "sourcePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/AragonCourt.sol",
  "ast": {
    "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/AragonCourt.sol",
    "exportedSymbols": {
      "AragonCourt": [
        360
      ]
    },
    "id": 361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 111,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/Uint256Helpers.sol",
        "file": "../lib/os/Uint256Helpers.sol",
        "id": 112,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 9188,
        "src": "25:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/controller/Controller.sol",
        "file": "./controller/Controller.sol",
        "id": 113,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 2983,
        "src": "65:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrator.sol",
        "file": "../arbitration/IArbitrator.sol",
        "id": 114,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 110,
        "src": "103:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrable.sol",
        "file": "../arbitration/IArbitrable.sol",
        "id": 115,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 67,
        "src": "144:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/disputes/IDisputeManager.sol",
        "file": "../disputes/IDisputeManager.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 6785,
        "src": "185:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/subscriptions/ISubscriptions.sol",
        "file": "../subscriptions/ISubscriptions.sol",
        "id": 117,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 13308,
        "src": "227:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 118,
              "name": "Controller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2982,
              "src": "299:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Controller_$2982",
                "typeString": "contract Controller"
              }
            },
            "id": 119,
            "nodeType": "InheritanceSpecifier",
            "src": "299:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 120,
              "name": "IArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 109,
              "src": "311:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$109",
                "typeString": "contract IArbitrator"
              }
            },
            "id": 121,
            "nodeType": "InheritanceSpecifier",
            "src": "311:11:2"
          }
        ],
        "contractDependencies": [
          109,
          926,
          979,
          1872,
          1926,
          1984,
          2982,
          8622,
          9128
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 360,
        "linearizedBaseContracts": [
          360,
          109,
          2982,
          1872,
          1926,
          1984,
          926,
          9128,
          979,
          8622
        ],
        "name": "AragonCourt",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 124,
            "libraryName": {
              "contractScope": null,
              "id": 122,
              "name": "Uint256Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9187,
              "src": "335:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uint256Helpers_$9187",
                "typeString": "library Uint256Helpers"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "329:33:2",
            "typeName": {
              "id": 123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 127,
            "name": "ERROR_SUBSCRIPTION_NOT_PAID",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "368:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 125,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "368:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41435f535542534352495054494f4e5f4e4f545f50414944",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:26:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21f816f89e0d622a1cde51be3438436d2e2c5fded5b6ea4881ee9c15a1525d67",
                "typeString": "literal_string \"AC_SUBSCRIPTION_NOT_PAID\""
              },
              "value": "AC_SUBSCRIPTION_NOT_PAID"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 130,
            "name": "ERROR_SENDER_NOT_ARBITRABLE",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "454:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 128,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "454:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41435f53454e4445525f4e4f545f41524249545241424c45",
              "id": 129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "508:26:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4f488909f7eaa2dd9382336241ae7ab33aa39958ed484aa1d5582b868dc020cc",
                "typeString": "literal_string \"AC_SENDER_NOT_ARBITRABLE\""
              },
              "value": "AC_SENDER_NOT_ARBITRABLE"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 135,
            "name": "ARBITRABLE_INTERFACE_ID",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "589:68:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 131,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "589:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30783838663365653639",
                  "id": 133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "646:10:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2297687657_by_1",
                    "typeString": "int_const 2297687657"
                  },
                  "value": "0x88f3ee69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2297687657_by_1",
                    "typeString": "int_const 2297687657"
                  }
                ],
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "639:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 134,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "639:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "3800:63:2",
              "statements": []
            },
            "documentation": "@dev Constructor function\n@param _termParams Array containing:\n       0. _termDuration Duration in seconds per term\n       1. _firstTermStartTime Timestamp in seconds when the court will open (to give time for juror on-boarding)\n@param _governors Array containing:\n       0. _fundsGovernor Address of the funds governor\n       1. _configGovernor Address of the config governor\n       2. _modulesGovernor Address of the modules governor\n@param _feeToken Address of the token contract that is used to pay for fees\n@param _fees Array containing:\n       0. jurorFee Amount of fee tokens that is paid per juror per dispute\n       1. draftFee Amount of fee tokens per juror to cover the drafting cost\n       2. settleFee Amount of fee tokens per juror to cover round settlement cost\n@param _roundStateDurations Array containing the durations in terms of the different phases of a dispute:\n       0. evidenceTerms Max submitting evidence period duration in terms\n       1. commitTerms Commit period duration in terms\n       2. revealTerms Reveal period duration in terms\n       3. appealTerms Appeal period duration in terms\n       4. appealConfirmationTerms Appeal confirmation period duration in terms\n@param _pcts Array containing:\n       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (‱ - 1/10,000)\n       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)\n@param _roundParams Array containing params for rounds:\n       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes\n       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute\n       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered\n       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)\n@param _appealCollateralParams Array containing params for appeal collateral:\n       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling\n       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal\n@param _minActiveBalance Minimum amount of juror tokens that can be activated",
            "id": 182,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 170,
                    "name": "_termParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 139,
                    "src": "3561:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$2_memory_ptr",
                      "typeString": "uint64[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 171,
                    "name": "_governors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "3586:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 172,
                    "name": "_feeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "3610:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 173,
                    "name": "_fees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 149,
                    "src": "3633:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                      "typeString": "uint256[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 174,
                    "name": "_roundStateDurations",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "3652:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$5_memory_ptr",
                      "typeString": "uint64[5] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 175,
                    "name": "_pcts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "3686:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                      "typeString": "uint16[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 176,
                    "name": "_roundParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "3705:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$4_memory_ptr",
                      "typeString": "uint64[4] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "_appealCollateralParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "3731:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 178,
                    "name": "_minActiveBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 167,
                    "src": "3768:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 179,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "Controller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2982,
                  "src": "3537:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Controller_$2982_$",
                    "typeString": "type(contract Controller)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3537:258:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_termParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3179:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$2_memory_ptr",
                    "typeString": "uint64[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3179:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 138,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3186:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3179:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$2_storage_ptr",
                      "typeString": "uint64[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_governors",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3217:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 140,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3217:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 142,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3225:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3217:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3255:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "3255:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3280:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 146,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3280:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 148,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3288:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3280:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_roundStateDurations",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3313:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$5_memory_ptr",
                    "typeString": "uint64[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 150,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3313:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 152,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3320:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3313:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$5_storage_ptr",
                      "typeString": "uint64[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "_pcts",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3360:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                    "typeString": "uint16[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "3360:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 156,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3367:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3360:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$2_storage_ptr",
                      "typeString": "uint16[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_roundParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3392:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$4_memory_ptr",
                    "typeString": "uint64[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 158,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3392:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 160,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3399:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3392:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$4_storage_ptr",
                      "typeString": "uint64[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "_appealCollateralParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3431:41:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3431:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3439:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3431:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_minActiveBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3482:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3169:344:2"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:0:2"
            },
            "scope": 360,
            "src": "3158:705:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "4334:501:2",
              "statements": [
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4344:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 191,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "4344:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16708,
                          "src": "4378:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4378:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 193,
                      "name": "IArbitrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4366:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IArbitrable_$66_$",
                        "typeString": "type(contract IArbitrable)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$66",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4344:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "ARBITRABLE_INTERFACE_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4433:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "subject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "4407:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$66",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65,
                          "src": "4407:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) pure external returns (bool)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4407:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "ERROR_SENDER_NOT_ARBITRABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "4459:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16711,
                        16712
                      ],
                      "referencedDeclaration": 16712,
                      "src": "4399:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:88:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "4399:88:2"
                },
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "name": "subscriptions",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4498:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                        "typeString": "contract ISubscriptions"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 206,
                        "name": "ISubscriptions",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13307,
                        "src": "4498:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                          "typeString": "contract ISubscriptions"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 209,
                          "name": "_getSubscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2969,
                          "src": "4544:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4544:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "ISubscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13307,
                      "src": "4529:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISubscriptions_$13307_$",
                        "typeString": "type(contract ISubscriptions)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4529:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                      "typeString": "contract ISubscriptions"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4498:66:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 217,
                                "name": "subject",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "4615:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrable_$66",
                                  "typeString": "contract IArbitrable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IArbitrable_$66",
                                  "typeString": "contract IArbitrable"
                                }
                              ],
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4607:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4607:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "4582:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                              "typeString": "contract ISubscriptions"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUpToDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13295,
                          "src": "4582:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4582:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "ERROR_SUBSCRIPTION_NOT_PAID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4626:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16711,
                        16712
                      ],
                      "referencedDeclaration": 16712,
                      "src": "4574:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4574:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "4574:80:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4665:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 223,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "4665:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 226,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "4714:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4714:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "4698:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4665:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "4781:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "_possibleRulings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "4790:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toUint8",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9167,
                          "src": "4790:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint8)"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4790:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "4818:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4752:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6619,
                      "src": "4752:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IArbitrable_$66_$_t_uint8_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IArbitrable,uint8,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "4745:83:2"
                }
              ]
            },
            "documentation": "@notice Create a dispute with `_possibleRulings` possible rulings\n@param _possibleRulings Number of possible rulings allowed for the drafted jurors to vote on the dispute\n@param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n@return Dispute identification number",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "name": "_possibleRulings",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4255:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "name": "_metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4281:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4254:52:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4325:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4324:9:2"
            },
            "scope": 360,
            "src": "4232:603:2",
            "stateMutability": "nonpayable",
            "superFunction": 78,
            "visibility": "external"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "5080:207:2",
              "statements": [
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "5090:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 245,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "5090:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16708,
                          "src": "5124:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5124:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 247,
                      "name": "IArbitrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "5112:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IArbitrable_$66_$",
                        "typeString": "type(contract IArbitrable)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$66",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5090:45:2"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "5145:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 252,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "5145:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 255,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "5194:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5194:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 254,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "5178:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5178:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5145:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "5260:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "5269:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "5225:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeEvidencePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6626,
                      "src": "5225:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IArbitrable_$66_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IArbitrable,uint256) external"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5225:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "5225:55:2"
                }
              ]
            },
            "documentation": "@notice Close the evidence period of dispute #`_disputeId`\n@param _disputeId Identification number of the dispute to close its evidence submitting period",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeEvidencePeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "5051:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5050:20:2"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5080:0:2"
            },
            "scope": 360,
            "src": "5022:265:2",
            "stateMutability": "nonpayable",
            "superFunction": 83,
            "visibility": "external"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "5535:226:2",
              "statements": [
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5545:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 272,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "5545:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 275,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "5594:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5594:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 274,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "5578:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5578:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5545:70:2"
                },
                {
                  "assignments": [
                    280,
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 280,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5626:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 279,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "5626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 282,
                      "name": "ruling",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5647:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5647:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 287,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5692:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5663:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6658,
                      "src": "5663:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IArbitrable_$66_$_t_uint8_$",
                        "typeString": "function (uint256) external returns (contract IArbitrable,uint8)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5663:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IArbitrable_$66_$_t_uint8_$",
                      "typeString": "tuple(contract IArbitrable,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5625:78:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5726:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "5746:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5738:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5738:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "5713:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49,
                      "src": "5713:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5713:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5713:41:2"
                }
              ]
            },
            "documentation": "@notice Execute the Arbitrable associated to dispute #`_disputeId` based on its final ruling\n@param _disputeId Identification number of the dispute to be executed",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "5506:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5505:20:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5535:0:2"
            },
            "scope": 360,
            "src": "5483:278:2",
            "stateMutability": "nonpayable",
            "superFunction": 88,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "6178:183:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 307,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "6188:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 308,
                        "name": "_getDisputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2959,
                        "src": "6200:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6200:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6188:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "6188:32:2"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "6230:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 312,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "6230:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "6279:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 314,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "6263:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6230:59:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "feeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "6300:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$8594",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "6310:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6299:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "disputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "6323:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                            "typeString": "contract IDisputeManager"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getDisputeFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6690,
                        "src": "6323:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$8594_$_t_uint256_$",
                          "typeString": "function () view external returns (contract ERC20,uint256)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6323:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256)"
                      }
                    },
                    "src": "6299:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6299:55:2"
                }
              ]
            },
            "documentation": "@dev Tell the dispute fees information to create a dispute\n@return recipient Address where the corresponding dispute fees must be transferred to\n@return feeToken ERC20 token used for the fees\n@return feeAmount Total amount of fees that must be allowed to the recipient",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDisputeFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6098:2:2"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6124:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "name": "feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6143:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "6143:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "name": "feeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6159:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6123:54:2"
            },
            "scope": 360,
            "src": "6075:286:2",
            "stateMutability": "view",
            "superFunction": 97,
            "visibility": "external"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "6921:194:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "6931:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 339,
                        "name": "_getSubscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2969,
                        "src": "6943:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6943:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6931:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "6931:31:2"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "name": "subscriptions",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "6972:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                        "typeString": "contract ISubscriptions"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 343,
                        "name": "ISubscriptions",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13307,
                        "src": "6972:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                          "typeString": "contract ISubscriptions"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "7018:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 345,
                      "name": "ISubscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13307,
                      "src": "7003:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISubscriptions_$13307_$",
                        "typeString": "type(contract ISubscriptions)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7003:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                      "typeString": "contract ISubscriptions"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:56:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "feeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "7039:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$8594",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 350,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "7049:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 351,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7038:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$__$",
                        "typeString": "tuple(contract ERC20,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "_subscriber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "7096:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "7063:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                            "typeString": "contract ISubscriptions"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwedFeesDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13306,
                        "src": "7063:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ERC20_$8594_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (contract ERC20,uint256,uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7063:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256,uint256)"
                      }
                    },
                    "src": "7038:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "7038:70:2"
                }
              ]
            },
            "documentation": "@dev Tell the subscription fees information for a subscriber to be up-to-date\n@param _subscriber Address of the account paying the subscription fees for\n@return recipient Address where the corresponding subscriptions fees must be transferred to\n@return feeToken ERC20 token used for the subscription fees\n@return feeAmount Total amount of fees that must be allowed to the recipient",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubscriptionFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6823:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6823:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6822:21:2"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6867:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "name": "feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6886:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 333,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "6886:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "name": "feeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6902:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6902:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6866:54:2"
            },
            "scope": 360,
            "src": "6794:321:2",
            "stateMutability": "view",
            "superFunction": 108,
            "visibility": "external"
          }
        ],
        "scope": 361,
        "src": "275:6842:2"
      }
    ],
    "src": "0:7118:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/AragonCourt.sol",
    "exportedSymbols": {
      "AragonCourt": [
        360
      ]
    },
    "id": 361,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 111,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/lib/os/Uint256Helpers.sol",
        "file": "../lib/os/Uint256Helpers.sol",
        "id": 112,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 9188,
        "src": "25:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/court/controller/Controller.sol",
        "file": "./controller/Controller.sol",
        "id": 113,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 2983,
        "src": "65:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrator.sol",
        "file": "../arbitration/IArbitrator.sol",
        "id": 114,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 110,
        "src": "103:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/arbitration/IArbitrable.sol",
        "file": "../arbitration/IArbitrable.sol",
        "id": 115,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 67,
        "src": "144:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/disputes/IDisputeManager.sol",
        "file": "../disputes/IDisputeManager.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 6785,
        "src": "185:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/work/aragon/dev/aragon-court/contracts/subscriptions/ISubscriptions.sol",
        "file": "../subscriptions/ISubscriptions.sol",
        "id": 117,
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 13308,
        "src": "227:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 118,
              "name": "Controller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2982,
              "src": "299:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Controller_$2982",
                "typeString": "contract Controller"
              }
            },
            "id": 119,
            "nodeType": "InheritanceSpecifier",
            "src": "299:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 120,
              "name": "IArbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 109,
              "src": "311:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$109",
                "typeString": "contract IArbitrator"
              }
            },
            "id": 121,
            "nodeType": "InheritanceSpecifier",
            "src": "311:11:2"
          }
        ],
        "contractDependencies": [
          109,
          926,
          979,
          1872,
          1926,
          1984,
          2982,
          8622,
          9128
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 360,
        "linearizedBaseContracts": [
          360,
          109,
          2982,
          1872,
          1926,
          1984,
          926,
          9128,
          979,
          8622
        ],
        "name": "AragonCourt",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 124,
            "libraryName": {
              "contractScope": null,
              "id": 122,
              "name": "Uint256Helpers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9187,
              "src": "335:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uint256Helpers_$9187",
                "typeString": "library Uint256Helpers"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "329:33:2",
            "typeName": {
              "id": 123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 127,
            "name": "ERROR_SUBSCRIPTION_NOT_PAID",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "368:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 125,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "368:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41435f535542534352495054494f4e5f4e4f545f50414944",
              "id": 126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "422:26:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_21f816f89e0d622a1cde51be3438436d2e2c5fded5b6ea4881ee9c15a1525d67",
                "typeString": "literal_string \"AC_SUBSCRIPTION_NOT_PAID\""
              },
              "value": "AC_SUBSCRIPTION_NOT_PAID"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 130,
            "name": "ERROR_SENDER_NOT_ARBITRABLE",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "454:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 128,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "454:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "41435f53454e4445525f4e4f545f41524249545241424c45",
              "id": 129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "508:26:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4f488909f7eaa2dd9382336241ae7ab33aa39958ed484aa1d5582b868dc020cc",
                "typeString": "literal_string \"AC_SENDER_NOT_ARBITRABLE\""
              },
              "value": "AC_SENDER_NOT_ARBITRABLE"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 135,
            "name": "ARBITRABLE_INTERFACE_ID",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "589:68:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 131,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "589:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30783838663365653639",
                  "id": 133,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "646:10:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2297687657_by_1",
                    "typeString": "int_const 2297687657"
                  },
                  "value": "0x88f3ee69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2297687657_by_1",
                    "typeString": "int_const 2297687657"
                  }
                ],
                "id": 132,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "639:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": "bytes4"
              },
              "id": 134,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "639:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "3800:63:2",
              "statements": []
            },
            "documentation": "@dev Constructor function\n@param _termParams Array containing:\n       0. _termDuration Duration in seconds per term\n       1. _firstTermStartTime Timestamp in seconds when the court will open (to give time for juror on-boarding)\n@param _governors Array containing:\n       0. _fundsGovernor Address of the funds governor\n       1. _configGovernor Address of the config governor\n       2. _modulesGovernor Address of the modules governor\n@param _feeToken Address of the token contract that is used to pay for fees\n@param _fees Array containing:\n       0. jurorFee Amount of fee tokens that is paid per juror per dispute\n       1. draftFee Amount of fee tokens per juror to cover the drafting cost\n       2. settleFee Amount of fee tokens per juror to cover round settlement cost\n@param _roundStateDurations Array containing the durations in terms of the different phases of a dispute:\n       0. evidenceTerms Max submitting evidence period duration in terms\n       1. commitTerms Commit period duration in terms\n       2. revealTerms Reveal period duration in terms\n       3. appealTerms Appeal period duration in terms\n       4. appealConfirmationTerms Appeal confirmation period duration in terms\n@param _pcts Array containing:\n       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (‱ - 1/10,000)\n       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)\n@param _roundParams Array containing params for rounds:\n       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes\n       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute\n       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered\n       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)\n@param _appealCollateralParams Array containing params for appeal collateral:\n       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling\n       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal\n@param _minActiveBalance Minimum amount of juror tokens that can be activated",
            "id": 182,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 170,
                    "name": "_termParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 139,
                    "src": "3561:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$2_memory_ptr",
                      "typeString": "uint64[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 171,
                    "name": "_governors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "3586:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                      "typeString": "address[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 172,
                    "name": "_feeToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 145,
                    "src": "3610:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 173,
                    "name": "_fees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 149,
                    "src": "3633:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                      "typeString": "uint256[3] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 174,
                    "name": "_roundStateDurations",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153,
                    "src": "3652:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$5_memory_ptr",
                      "typeString": "uint64[5] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 175,
                    "name": "_pcts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157,
                    "src": "3686:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                      "typeString": "uint16[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 176,
                    "name": "_roundParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "3705:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$4_memory_ptr",
                      "typeString": "uint64[4] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "_appealCollateralParams",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "3731:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 178,
                    "name": "_minActiveBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 167,
                    "src": "3768:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 179,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "Controller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2982,
                  "src": "3537:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Controller_$2982_$",
                    "typeString": "type(contract Controller)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3537:258:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_termParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3179:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$2_memory_ptr",
                    "typeString": "uint64[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3179:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 138,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3186:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3179:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$2_storage_ptr",
                      "typeString": "uint64[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_governors",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3217:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                    "typeString": "address[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 140,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3217:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 142,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3225:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3217:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$3_storage_ptr",
                      "typeString": "address[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3255:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 144,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "3255:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3280:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 146,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3280:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 148,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3288:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3280:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "name": "_roundStateDurations",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3313:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$5_memory_ptr",
                    "typeString": "uint64[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 150,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3313:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 152,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3320:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3313:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$5_storage_ptr",
                      "typeString": "uint64[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "_pcts",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3360:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$2_memory_ptr",
                    "typeString": "uint16[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 154,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "3360:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 156,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3367:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3360:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$2_storage_ptr",
                      "typeString": "uint16[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_roundParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3392:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$4_memory_ptr",
                    "typeString": "uint64[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 158,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "3392:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 160,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3399:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3392:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$4_storage_ptr",
                      "typeString": "uint64[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "_appealCollateralParams",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3431:41:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3431:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3439:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3431:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "name": "_minActiveBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "3482:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3169:344:2"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:0:2"
            },
            "scope": 360,
            "src": "3158:705:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "4334:501:2",
              "statements": [
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4344:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 191,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "4344:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16708,
                          "src": "4378:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4378:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 193,
                      "name": "IArbitrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4366:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IArbitrable_$66_$",
                        "typeString": "type(contract IArbitrable)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$66",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4344:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "ARBITRABLE_INTERFACE_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4433:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "subject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "4407:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$66",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65,
                          "src": "4407:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) pure external returns (bool)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4407:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "ERROR_SENDER_NOT_ARBITRABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "4459:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16711,
                        16712
                      ],
                      "referencedDeclaration": 16712,
                      "src": "4399:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4399:88:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "4399:88:2"
                },
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "name": "subscriptions",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4498:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                        "typeString": "contract ISubscriptions"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 206,
                        "name": "ISubscriptions",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13307,
                        "src": "4498:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                          "typeString": "contract ISubscriptions"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 209,
                          "name": "_getSubscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2969,
                          "src": "4544:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4544:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "ISubscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13307,
                      "src": "4529:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISubscriptions_$13307_$",
                        "typeString": "type(contract ISubscriptions)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4529:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                      "typeString": "contract ISubscriptions"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4498:66:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 217,
                                "name": "subject",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "4615:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IArbitrable_$66",
                                  "typeString": "contract IArbitrable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IArbitrable_$66",
                                  "typeString": "contract IArbitrable"
                                }
                              ],
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4607:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4607:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 214,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "4582:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                              "typeString": "contract ISubscriptions"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUpToDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13295,
                          "src": "4582:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4582:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "ERROR_SUBSCRIPTION_NOT_PAID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "4626:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16711,
                        16712
                      ],
                      "referencedDeclaration": 16712,
                      "src": "4574:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4574:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "4574:80:2"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 239,
                      "src": "4665:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 223,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "4665:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 226,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "4714:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4714:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "4698:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4665:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "4781:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "_possibleRulings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "4790:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toUint8",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9167,
                          "src": "4790:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint8)"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4790:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "4818:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "4752:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6619,
                      "src": "4752:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IArbitrable_$66_$_t_uint8_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IArbitrable,uint8,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4752:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "4745:83:2"
                }
              ]
            },
            "documentation": "@notice Create a dispute with `_possibleRulings` possible rulings\n@param _possibleRulings Number of possible rulings allowed for the drafted jurors to vote on the dispute\n@param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n@return Dispute identification number",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "name": "_possibleRulings",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4255:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "name": "_metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4281:24:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4254:52:2"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4325:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4324:9:2"
            },
            "scope": 360,
            "src": "4232:603:2",
            "stateMutability": "nonpayable",
            "superFunction": 78,
            "visibility": "external"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "5080:207:2",
              "statements": [
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "5090:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 245,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "5090:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 251,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16708,
                          "src": "5124:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5124:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 247,
                      "name": "IArbitrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "5112:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IArbitrable_$66_$",
                        "typeString": "type(contract IArbitrable)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$66",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5090:45:2"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 266,
                      "src": "5145:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 252,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "5145:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 255,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "5194:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5194:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 254,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "5178:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5178:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5145:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "5260:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "5269:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "5225:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeEvidencePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6626,
                      "src": "5225:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IArbitrable_$66_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IArbitrable,uint256) external"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5225:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "5225:55:2"
                }
              ]
            },
            "documentation": "@notice Close the evidence period of dispute #`_disputeId`\n@param _disputeId Identification number of the dispute to close its evidence submitting period",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeEvidencePeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "5051:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5050:20:2"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5080:0:2"
            },
            "scope": 360,
            "src": "5022:265:2",
            "stateMutability": "nonpayable",
            "superFunction": 83,
            "visibility": "external"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "5535:226:2",
              "statements": [
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5545:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 272,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "5545:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 275,
                          "name": "_getDisputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2959,
                          "src": "5594:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5594:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 274,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "5578:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5578:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5545:70:2"
                },
                {
                  "assignments": [
                    280,
                    282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 280,
                      "name": "subject",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5626:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrable_$66",
                        "typeString": "contract IArbitrable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 279,
                        "name": "IArbitrable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 66,
                        "src": "5626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 282,
                      "name": "ruling",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5647:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5647:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 287,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5692:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "disputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5663:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6658,
                      "src": "5663:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_contract$_IArbitrable_$66_$_t_uint8_$",
                        "typeString": "function (uint256) external returns (contract IArbitrable,uint8)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5663:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IArbitrable_$66_$_t_uint8_$",
                      "typeString": "tuple(contract IArbitrable,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5625:78:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "_disputeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5726:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "5746:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5738:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5738:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "subject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "5713:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$66",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49,
                      "src": "5713:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5713:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5713:41:2"
                }
              ]
            },
            "documentation": "@notice Execute the Arbitrable associated to dispute #`_disputeId` based on its final ruling\n@param _disputeId Identification number of the dispute to be executed",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "_disputeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "5506:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5505:20:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5535:0:2"
            },
            "scope": 360,
            "src": "5483:278:2",
            "stateMutability": "nonpayable",
            "superFunction": 88,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "6178:183:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 307,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "6188:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 308,
                        "name": "_getDisputeManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2959,
                        "src": "6200:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6200:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6188:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "6188:32:2"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "name": "disputeManager",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "6230:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                        "typeString": "contract IDisputeManager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 312,
                        "name": "IDisputeManager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6784,
                        "src": "6230:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                          "typeString": "contract IDisputeManager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "6279:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 314,
                      "name": "IDisputeManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6784,
                      "src": "6263:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDisputeManager_$6784_$",
                        "typeString": "type(contract IDisputeManager)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                      "typeString": "contract IDisputeManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6230:59:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 318,
                          "name": "feeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "6300:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$8594",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "6310:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 320,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6299:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "disputeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "6323:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDisputeManager_$6784",
                            "typeString": "contract IDisputeManager"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getDisputeFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6690,
                        "src": "6323:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$8594_$_t_uint256_$",
                          "typeString": "function () view external returns (contract ERC20,uint256)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6323:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256)"
                      }
                    },
                    "src": "6299:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6299:55:2"
                }
              ]
            },
            "documentation": "@dev Tell the dispute fees information to create a dispute\n@return recipient Address where the corresponding dispute fees must be transferred to\n@return feeToken ERC20 token used for the fees\n@return feeAmount Total amount of fees that must be allowed to the recipient",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDisputeFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6098:2:2"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6124:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "name": "feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6143:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "6143:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "name": "feeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "6159:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6159:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6123:54:2"
            },
            "scope": 360,
            "src": "6075:286:2",
            "stateMutability": "view",
            "superFunction": 97,
            "visibility": "external"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "6921:194:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "6931:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 339,
                        "name": "_getSubscriptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2969,
                        "src": "6943:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6943:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6931:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "6931:31:2"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "name": "subscriptions",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "6972:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                        "typeString": "contract ISubscriptions"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 343,
                        "name": "ISubscriptions",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13307,
                        "src": "6972:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                          "typeString": "contract ISubscriptions"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "7018:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 345,
                      "name": "ISubscriptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13307,
                      "src": "7003:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISubscriptions_$13307_$",
                        "typeString": "type(contract ISubscriptions)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7003:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                      "typeString": "contract ISubscriptions"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:56:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "feeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "7039:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$8594",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 350,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "7049:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 351,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7038:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$__$",
                        "typeString": "tuple(contract ERC20,uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "_subscriber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "7096:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "subscriptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "7063:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISubscriptions_$13307",
                            "typeString": "contract ISubscriptions"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwedFeesDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13306,
                        "src": "7063:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_ERC20_$8594_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (contract ERC20,uint256,uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7063:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_ERC20_$8594_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(contract ERC20,uint256,uint256)"
                      }
                    },
                    "src": "7038:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "7038:70:2"
                }
              ]
            },
            "documentation": "@dev Tell the subscription fees information for a subscriber to be up-to-date\n@param _subscriber Address of the account paying the subscription fees for\n@return recipient Address where the corresponding subscriptions fees must be transferred to\n@return feeToken ERC20 token used for the subscription fees\n@return feeAmount Total amount of fees that must be allowed to the recipient",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubscriptionFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_subscriber",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6823:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6823:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6822:21:2"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6867:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "name": "feeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6886:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$8594",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 333,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8594,
                    "src": "6886:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$8594",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "name": "feeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "6902:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6902:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6866:54:2"
            },
            "scope": 360,
            "src": "6794:321:2",
            "stateMutability": "view",
            "superFunction": 108,
            "visibility": "external"
          }
        ],
        "scope": 361,
        "src": "275:6842:2"
      }
    ],
    "src": "0:7118:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-03-17T13:23:57.770Z",
  "devdoc": {
    "methods": {
      "areWithdrawalsAllowedFor(address)": {
        "details": "Tell whether a certain holder accepts automatic withdrawals of tokens or not",
        "params": {
          "_holder": "Address of the token holder querying if withdrawals are allowed for"
        },
        "return": "True if the given holder accepts automatic withdrawals of their tokens, false otherwise"
      },
      "changeConfigGovernor(address)": {
        "params": {
          "_newConfigGovernor": "Address of the new config governor to be set"
        }
      },
      "changeFundsGovernor(address)": {
        "params": {
          "_newFundsGovernor": "Address of the new funds governor to be set"
        }
      },
      "changeModulesGovernor(address)": {
        "params": {
          "_newModulesGovernor": "Address of the new governor to be set"
        }
      },
      "closeEvidencePeriod(uint256)": {
        "params": {
          "_disputeId": "Identification number of the dispute to close its evidence submitting period"
        }
      },
      "constructor": {
        "details": "Constructor function",
        "params": {
          "_appealCollateralParams": "Array containing params for appeal collateral:       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal",
          "_feeToken": "Address of the token contract that is used to pay for fees",
          "_fees": "Array containing:       0. jurorFee Amount of fee tokens that is paid per juror per dispute       1. draftFee Amount of fee tokens per juror to cover the drafting cost       2. settleFee Amount of fee tokens per juror to cover round settlement cost",
          "_governors": "Array containing:       0. _fundsGovernor Address of the funds governor       1. _configGovernor Address of the config governor       2. _modulesGovernor Address of the modules governor",
          "_minActiveBalance": "Minimum amount of juror tokens that can be activated",
          "_pcts": "Array containing:       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (‱ - 1/10,000)       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)",
          "_roundParams": "Array containing params for rounds:       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)",
          "_roundStateDurations": "Array containing the durations in terms of the different phases of a dispute:       0. evidenceTerms Max submitting evidence period duration in terms       1. commitTerms Commit period duration in terms       2. revealTerms Reveal period duration in terms       3. appealTerms Appeal period duration in terms       4. appealConfirmationTerms Appeal confirmation period duration in terms",
          "_termParams": "Array containing:       0. _termDuration Duration in seconds per term       1. _firstTermStartTime Timestamp in seconds when the court will open (to give time for juror on-boarding)"
        }
      },
      "createDispute(uint256,bytes)": {
        "params": {
          "_metadata": "Optional metadata that can be used to provide additional information on the dispute to be created",
          "_possibleRulings": "Number of possible rulings allowed for the drafted jurors to vote on the dispute"
        },
        "return": "Dispute identification number"
      },
      "delayStartTime(uint64)": {
        "params": {
          "_newFirstTermStartTime": "New timestamp in seconds when the court will open"
        }
      },
      "ejectFundsGovernor()": {
        "details": "This action cannot be rolled back, once the funds governor has been unset, funds cannot be recovered from recoverable modules anymore"
      },
      "ejectModulesGovernor()": {
        "details": "This action cannot be rolled back, once the modules governor has been unset, system modules cannot be changed anymore"
      },
      "ensureCurrentTerm()": {
        "return": "Identification number of the current term"
      },
      "ensureCurrentTermRandomness()": {
        "return": "Randomness of the current term"
      },
      "executeRuling(uint256)": {
        "params": {
          "_disputeId": "Identification number of the dispute to be executed"
        }
      },
      "getConfig(uint64)": {
        "details": "Tell the full Court configuration parameters at a certain term",
        "params": {
          "_termId": "Identification number of the term querying the Court config of"
        },
        "return": "token Address of the token used to pay for feesfees Array containing:        0. jurorFee Amount of fee tokens that is paid per juror per dispute        1. draftFee Amount of fee tokens per juror to cover the drafting cost        2. settleFee Amount of fee tokens per juror to cover round settlement costroundStateDurations Array containing the durations in terms of the different phases of a dispute:        0. evidenceTerms Max submitting evidence period duration in terms        1. commitTerms Commit period duration in terms        2. revealTerms Reveal period duration in terms        3. appealTerms Appeal period duration in terms        4. appealConfirmationTerms Appeal confirmation period duration in termspcts Array containing:        0. penaltyPct Permyriad of min active tokens balance to be locked for each drafted juror (‱ - 1/10,000)        1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)roundParams Array containing params for rounds:        0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes        1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute        2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered        3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)appealCollateralParams Array containing params for appeal collateral:        0. appealCollateralFactor Multiple of dispute fees required to appeal a preliminary ruling        1. appealConfirmCollateralFactor Multiple of dispute fees required to confirm appeal"
      },
      "getConfigChangeTermId()": {
        "details": "Tell the term identification number of the next scheduled config change",
        "return": "Term identification number of the next scheduled config change"
      },
      "getConfigGovernor()": {
        "details": "Tell the address of the config governor",
        "return": "Address of the config governor"
      },
      "getCurrentTermId()": {
        "details": "Tell the current term identification number. Note that there may be pending term transitions.",
        "return": "Identification number of the current term"
      },
      "getDisputeFees()": {
        "details": "Tell the dispute fees information to create a dispute",
        "return": "recipient Address where the corresponding dispute fees must be transferred tofeeToken ERC20 token used for the feesfeeAmount Total amount of fees that must be allowed to the recipient"
      },
      "getDisputeManager()": {
        "details": "Tell the address of the DisputeManager module",
        "return": "Address of the DisputeManager module"
      },
      "getDraftConfig(uint64)": {
        "details": "Tell the draft config at a certain term",
        "params": {
          "_termId": "Identification number of the term querying the draft config of"
        },
        "return": "feeToken Address of the token used to pay for feesdraftFee Amount of fee tokens per juror to cover the drafting costpenaltyPct Permyriad of min active tokens balance to be locked for each drafted juror (‱ - 1/10,000)"
      },
      "getFundsGovernor()": {
        "details": "Tell the address of the funds governor",
        "return": "Address of the funds governor"
      },
      "getJurorsRegistry()": {
        "details": "Tell the address of the JurorsRegistry module",
        "return": "Address of the JurorsRegistry module"
      },
      "getLastEnsuredTermId()": {
        "details": "Tell the last ensured term identification number",
        "return": "Identification number of the last ensured term"
      },
      "getMinActiveBalance(uint64)": {
        "details": "Tell the min active balance config at a certain term",
        "params": {
          "_termId": "Identification number of the term querying the min active balance config of"
        },
        "return": "Minimum amount of tokens jurors have to activate to participate in the Court"
      },
      "getModule(bytes32)": {
        "details": "Tell address of a module based on a given ID",
        "params": {
          "_id": "ID of the module being queried"
        },
        "return": "Address of the requested module"
      },
      "getModulesGovernor()": {
        "details": "Tell the address of the modules governor",
        "return": "Address of the modules governor"
      },
      "getNeededTermTransitions()": {
        "details": "Tell the number of terms the Court should transition to be up-to-date",
        "return": "Number of terms the Court should transition to be up-to-date"
      },
      "getSubscriptionFees(address)": {
        "details": "Tell the subscription fees information for a subscriber to be up-to-date",
        "params": {
          "_subscriber": "Address of the account paying the subscription fees for"
        },
        "return": "recipient Address where the corresponding subscriptions fees must be transferred tofeeToken ERC20 token used for the subscription feesfeeAmount Total amount of fees that must be allowed to the recipient"
      },
      "getSubscriptions()": {
        "details": "Tell the address of the Subscriptions module",
        "return": "Address of the Subscriptions module"
      },
      "getTerm(uint64)": {
        "details": "Tell the information related to a term based on its ID. Note that if the term has not been reached, the     information returned won't be computed yet. This function allows querying future terms that were not computed yet.",
        "params": {
          "_termId": "ID of the term being queried"
        },
        "return": "startTime Term start timerandomnessBN Block number used for randomness in the requested termrandomness Randomness computed for the requested term"
      },
      "getTermDuration()": {
        "details": "Tell the term duration of the Court",
        "return": "Duration in seconds of the Court term"
      },
      "getTermRandomness(uint64)": {
        "details": "Tell the randomness of a term even if it wasn't computed yet",
        "params": {
          "_termId": "Identification number of the term being queried"
        },
        "return": "Randomness of the requested term"
      },
      "getTreasury()": {
        "details": "Tell the address of the Treasury module",
        "return": "Address of the Treasury module"
      },
      "getVoting()": {
        "details": "Tell the address of the Voting module",
        "return": "Address of the Voting module"
      },
      "heartbeat(uint64)": {
        "params": {
          "_maxRequestedTransitions": "Max number of term transitions allowed by the sender"
        },
        "return": "Identification number of the term ID after executing the heartbeat transitions"
      },
      "setAutomaticWithdrawals(bool)": {
        "params": {
          "_allowed": "Whether or not the automatic withdrawals are allowed by the sender"
        }
      },
      "setConfig(uint64,address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)": {
        "params": {
          "_appealCollateralParams": "Array containing params for appeal collateral:       1. appealCollateralFactor Permyriad multiple of dispute fees required to appeal a preliminary ruling       2. appealConfirmCollateralFactor Permyriad multiple of dispute fees required to confirm appeal",
          "_feeToken": "Address of the token contract that is used to pay for fees",
          "_fees": "Array containing:       0. jurorFee Amount of fee tokens that is paid per juror per dispute       1. draftFee Amount of fee tokens per juror to cover the drafting cost       2. settleFee Amount of fee tokens per juror to cover round settlement cost",
          "_fromTermId": "Identification number of the term in which the config will be effective at",
          "_minActiveBalance": "Minimum amount of juror tokens that can be activated",
          "_pcts": "Array containing:       0. penaltyPct Permyriad of min active tokens balance to be locked to each drafted jurors (‱ - 1/10,000)       1. finalRoundReduction Permyriad of fee reduction for the last appeal round (‱ - 1/10,000)",
          "_roundParams": "Array containing params for rounds:       0. firstRoundJurorsNumber Number of jurors to be drafted for the first round of disputes       1. appealStepFactor Increasing factor for the number of jurors of each round of a dispute       2. maxRegularAppealRounds Number of regular appeal rounds before the final round is triggered       3. finalRoundLockTerms Number of terms that a coherent juror in a final round is disallowed to withdraw (to prevent 51% attacks)",
          "_roundStateDurations": "Array containing the durations in terms of the different phases of a dispute:       0. evidenceTerms Max submitting evidence period duration in terms       1. commitTerms Commit period duration in terms       2. revealTerms Reveal period duration in terms       3. appealTerms Appeal period duration in terms       4. appealConfirmationTerms Appeal confirmation period duration in terms"
        }
      },
      "setModule(bytes32,address)": {
        "params": {
          "_addr": "Address of the module to be set",
          "_id": "ID of the module to be set"
        }
      },
      "setModules(bytes32[],address[])": {
        "params": {
          "_addresses": "List of addressed of each the module to be set",
          "_ids": "List of ids of each module to be set"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "changeConfigGovernor(address)": {
        "notice": "Change config governor address to `_newConfigGovernor`"
      },
      "changeFundsGovernor(address)": {
        "notice": "Change funds governor address to `_newFundsGovernor`"
      },
      "changeModulesGovernor(address)": {
        "notice": "Change modules governor address to `_newModulesGovernor`"
      },
      "closeEvidencePeriod(uint256)": {
        "notice": "Close the evidence period of dispute #`_disputeId`"
      },
      "createDispute(uint256,bytes)": {
        "notice": "Create a dispute with `_possibleRulings` possible rulings"
      },
      "delayStartTime(uint64)": {
        "notice": "Delay the Court start time to `_newFirstTermStartTime`"
      },
      "ejectFundsGovernor()": {
        "notice": "Remove the funds governor. Set the funds governor to the zero address."
      },
      "ejectModulesGovernor()": {
        "notice": "Remove the modules governor. Set the modules governor to the zero address."
      },
      "ensureCurrentTerm()": {
        "notice": "Ensure that the current term of the Court is up-to-date. If the Court is outdated by more than `MAX_AUTO_TERM_TRANSITIONS_ALLOWED`        terms, the heartbeat function must be called manually instead."
      },
      "ensureCurrentTermRandomness()": {
        "notice": "Ensure that a certain term has its randomness set. As we allow to draft disputes requested for previous terms, if there     were mined more than 256 blocks for the current term, the blockhash of its randomness BN is no longer available, given     round will be able to be drafted in the following term."
      },
      "executeRuling(uint256)": {
        "notice": "Execute the Arbitrable associated to dispute #`_disputeId` based on its final ruling"
      },
      "heartbeat(uint64)": {
        "notice": "Transition up to `_maxRequestedTransitions` terms"
      },
      "setAutomaticWithdrawals(bool)": {
        "notice": "Set the automatic withdrawals config for the sender to `_allowed`"
      },
      "setConfig(uint64,address,uint256[3],uint64[5],uint16[2],uint64[4],uint256[2],uint256)": {
        "notice": "Change Court configuration params"
      },
      "setModule(bytes32,address)": {
        "notice": "Set module `_id` to `_addr`"
      },
      "setModules(bytes32[],address[])": {
        "notice": "Set many modules at once"
      }
    }
  }
}